From: Paolo Bonzini <pbonzini@redhat.com>
Date: Wed, 23 Jun 2010 14:09:31 -0400
Subject: [xen] vtd: fix parameter iommu=no-intremap
Message-id: <1277302172-10673-2-git-send-email-pbonzini@redhat.com>
Patchwork-id: 26470
O-Subject: [RHEL5.6 Xen PATCH] xen: fix parameter iommu=no-intremap
Bugzilla: 576478
RH-Acked-by: Andrew Jones <drjones@redhat.com>
RH-Acked-by: Don Dutile <ddutile@redhat.com>

Bugzilla: 576478

Upstream status: present since introduction of the feature (unlike RHEL),
    see c/s 19380

Brew build: https://brewweb.devel.redhat.com/taskinfo?taskID=2540880

On a host supporring VT-d Interrupt Remapping(IR), we should be able
to use the xen parameter iommu=no-intremap to tell xen not to enable
IR. This is usually useful for debug perpose since as of now many BIOS-es
don't support IR well.

However, "xm dmesg" shows that even if iommu=no-intremap is used to boot
xen, IR is still enabled.  The variable 'iommu-intremap" is set properly
accordingly the xen parameer, but it not tested before enabling IR.
---
 drivers/passthrough/vtd/iommu.c |   14 ++++++++------
 1 files changed, 8 insertions(+), 6 deletions(-)

Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/passthrough/vtd/iommu.c b/drivers/passthrough/vtd/iommu.c
index 307b9a2..85251b2 100644
--- a/drivers/passthrough/vtd/iommu.c
+++ b/drivers/passthrough/vtd/iommu.c
@@ -1695,12 +1695,14 @@ static int init_vtd_hw(void)
                     "Queued Invalidation hardware not found\n");
     }
 
-    for_each_drhd_unit ( drhd )
-    {
-        iommu = drhd->iommu;
-        if ( intremap_setup(iommu) != 0 )
-            dprintk(XENLOG_INFO VTDPREFIX,
-                    "Interrupt Remapping hardware not found\n");
+    if (iommu_intremap) {
+        for_each_drhd_unit ( drhd )
+        {
+            iommu = drhd->iommu;
+            if ( intremap_setup(iommu) != 0 )
+                dprintk(XENLOG_INFO VTDPREFIX,
+                        "Interrupt Remapping hardware not found\n");
+        }
     }
 
     return 0;
