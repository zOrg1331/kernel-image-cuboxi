From: Don Dutile <ddutile@redhat.com>
Date: Wed, 11 May 2011 19:40:41 -0400
Subject: [pci] SRIOV: release VF BAR resources when device is hot unplug
Message-id: <4DCAE639.1070201@redhat.com>
Patchwork-id: 35888
O-Subject: [RHEL5 PATCH] SRIOV: release VF BAR resources when device is hot
	unplug
Bugzilla: 698879
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

BZ 698879

brew build:  http://brewweb.devel.redhat.com/brew/taskinfo?taskID=3310773

When a PCIe device with SRIOV is removed from a system, properly release the resources
requested in the SR-IOV capability BARs.  Typically not noticeable, but
a hot unplug event would show this oversight.

Not needed upstream because upstream releases all BARs (inluding SR-IOV
capability BARs) during pci_free_resources.  RHEL 5 has the SR-IOV
capability resources stored externally in the pci_dev->sriov struct to
preserve kABI compatibility. Upstream has sriov resources stored in the
pci_dev uber-resource-array, which is traversed by pci_free_resources().

Testing:
(1) brew built kernel was tested & verified to fix reported problem by customer.
(2) Prarit duped conditions in hot-plug capable lab machine, verified it
    fixed the problem, and added detailed tracing to confirm the proper
    PCI (mem) resource allocation/deallocation.
   (Many thanks to Prarit for verification within RH engineering.)

Please review & ack.

- Don

Note: customer reports this problem as a regression from 5.4,
      their last update. It has existed since since 5.5's inclusion of
      SRIOV support.  Independent of fixing leaking PCI mem resources,
      it also avoids a crash: doing a 'cat /proc/iomem'  repeatedly after
      the unplug will crash the host (even w/o VF's enabled) since it
      doesn't unlink resource array from proc's iomem linked list, and
      when the sriov struct is released and then that memory re-used elsewhere,
      *boom* while traversing the list.
      Due to simplicity and obvious correctness of patch, and customer
      registering a regression, recommend this patch to RHEL5.7.
      If pushed to 5.8, then recommend for 5.7-z, and RHEL5.6-z in the interim.

diff --git a/drivers/pci/iov.c b/drivers/pci/iov.c
index c182696..4e525b5 100644
--- a/drivers/pci/iov.c
+++ b/drivers/pci/iov.c
@@ -396,11 +396,20 @@ failed:
 
 static void sriov_release(struct pci_dev *dev)
 {
+	int i;
+
 	BUG_ON(dev->sriov->nr_virtfn);
 
 	if (dev != dev->sriov->dev)
 		pci_dev_put(dev->sriov->dev);
 
+	for (i = 0; i < PCI_SRIOV_NUM_BARS; i++) {
+		struct resource *res = dev->sriov->res + i;
+		if (!res->parent)
+			continue;
+		release_resource(res);
+	}
+
 	mutex_destroy(&dev->sriov->lock);
 
 	kfree(dev->sriov);
