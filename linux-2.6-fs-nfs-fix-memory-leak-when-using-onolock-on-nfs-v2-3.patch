From: Jeff Layton <jlayton@redhat.com>
Date: Tue, 8 Jun 2010 12:35:46 -0400
Subject: [fs] nfs: fix memory leak when using -onolock on nfs v2/3
Message-id: <1276000546-20901-1-git-send-email-jlayton@redhat.com>
Patchwork-id: 26030
O-Subject: [RHEL5.6 PATCH] BZ#592908: NFSv2/v3: Fix a memory leak when using
	-onolock
Bugzilla: 592908
RH-Acked-by: Steve Dickson <SteveD@redhat.com>

From: Trond Myklebust <Trond.Myklebust@netapp.com>

This is a fairly straightforward patch to fix a memory leak whenever
someone does a mount with '-o nolock'. I've verified that it fixes
the problem with the reproducer provided.

-------------------------[snip]-------------------------

Neil Brown said:
> Hi Trond,
>
> We found that a machine which made moderately heavy use of
> 'automount' was leaking some nfs data structures - particularly the
> 4K allocated by rpc_alloc_iostats.
> It turns out that this only happens with filesystems with -onolock
> set.

> The problem is that if NFS_MOUNT_NONLM is set, nfs_start_lockd doesn't
> set server->destroy, so when the filesystem is unmounted, the
> ->client_acl is not shutdown, and so several resources are still
> held.  Multiple mount/umount cycles will slowly eat away memory
> several pages at a time.

Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
Acked-by: NeilBrown <neilb@suse.de>

diff --git a/fs/nfs/client.c b/fs/nfs/client.c
index f44f1d8..d35246a 100644
--- a/fs/nfs/client.c
+++ b/fs/nfs/client.c
@@ -432,9 +432,6 @@ static int nfs_create_rpc_client(struct nfs_client *clp, int proto,
  */
 static void nfs_destroy_server(struct nfs_server *server)
 {
-	if (!IS_ERR(server->client_acl))
-		rpc_shutdown_client(server->client_acl);
-
 	if (!(server->flags & NFS_MOUNT_NONLM))
 		lockd_down();	/* release rpc.lockd */
 }
@@ -773,6 +770,9 @@ void nfs_free_server(struct nfs_server *server)
 
 	if (server->destroy != NULL)
 		server->destroy(server);
+
+	if (!IS_ERR(server->client_acl))
+		rpc_shutdown_client(server->client_acl);
 	if (!IS_ERR(server->client))
 		rpc_shutdown_client(server->client);
 
