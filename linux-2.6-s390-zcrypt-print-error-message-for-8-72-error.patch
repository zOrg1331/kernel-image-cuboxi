From: Hendrik Brueckner <brueckner@redhat.com>
Date: Thu, 18 Feb 2010 08:18:35 -0500
Subject: [s390] zcrypt: print error message for 8/72 error
Message-id: <20100218081834.GA17446@redhat.com>
Patchwork-id: 23326
O-Subject: [RHEL5.6 PATCH 1/1] [s390] zcrypt: print error message for 8/72 error
Bugzilla: 563545
RH-Acked-by: Pete Zaitcev <zaitcev@redhat.com>

Description
-----------
Print a warning when error rc=8 rs=72 occurs to notify the user
that the HW request failed.  Currently, the error condition is
reported as -EINVAL only.
The rc=8 rs=72 is an error condition froma mod expo operation
where the data has a greater value than the modulus.

Solution: Use the PRINTKW macro to print a kernel warning.

Bugzilla
--------
BZ 563545
https://bugzilla.redhat.com/show_bug.cgi?id=563545

Upstream status of the patch
----------------------------
This patch is not applicable to the upstream kernel.
The warning message has been requested by customers.

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.


diff --git a/drivers/s390/crypto/zcrypt_pcicc.c b/drivers/s390/crypto/zcrypt_pcicc.c
index cdcab54..d5aa6ee 100644
--- a/drivers/s390/crypto/zcrypt_pcicc.c
+++ b/drivers/s390/crypto/zcrypt_pcicc.c
@@ -379,8 +379,11 @@ static int convert_type86(struct zcrypt_device *zdev,
 			zdev->max_mod_size = PCICC_MAX_MOD_SIZE_OLD;
 			return -EAGAIN;
 		}
-		if (service_rc == 8 && service_rs == 72)
+		if (service_rc == 8 && service_rs == 72) {
+			PRINTKW("Invalid size rc/rs = %d/%d\n", service_rc,
+				service_rs);
 			return -EINVAL;
+		}
 		PRINTK("Unknown service rc/rs (PCICC): %d/%d\n",
 		       service_rc, service_rs);
 		zdev->online = 0;
diff --git a/drivers/s390/crypto/zcrypt_pcixcc.c b/drivers/s390/crypto/zcrypt_pcixcc.c
index faf1ea8..d9b53c6 100644
--- a/drivers/s390/crypto/zcrypt_pcixcc.c
+++ b/drivers/s390/crypto/zcrypt_pcixcc.c
@@ -490,8 +490,11 @@ static int convert_type86_ica(struct zcrypt_device *zdev,
 			zdev->min_mod_size = PCIXCC_MIN_MOD_SIZE_OLD;
 			return -EAGAIN;
 		}
-		if (service_rc == 8 && service_rs == 72)
+		if (service_rc == 8 && service_rs == 72) {
+			PRINTKW("Invalid size rc/rs = %d/%d\n", service_rc,
+				service_rs);
 			return -EINVAL;
+		}
 		PRINTK("Unknown service rc/rs (PCIXCC/CEX2C): %d/%d\n",
 		       service_rc, service_rs);
 		zdev->online = 0;
