commit 389cee487dba970b4d9409d6eb3afe255048bb97
Author: Anton Protopopov <aspsk@altlinux.org>
Date:   Tue Nov 11 16:37:44 2008 +0300

    Revert "[PATCH] fs: utimensat syscall backported"
    
    Fixes https://bugzilla.altlinux.org/show_bug.cgi?id=17806
    
    This reverts commit 815bdcacf0138c3b677e46445dcc778d2cfcc251.

diff --git a/arch/i386/kernel/syscall_table.S b/arch/i386/kernel/syscall_table.S
index 6416cbb..a91e1c9 100644
--- a/arch/i386/kernel/syscall_table.S
+++ b/arch/i386/kernel/syscall_table.S
@@ -317,9 +317,8 @@ ENTRY(sys_call_table)
 	.long sys_tee			/* 315 */
 	.long sys_vmsplice
 	.long sys_move_pages
 	.long sys_getcpu
 	.long sys_epoll_pwait
-	.long sys_utimensat		/* 320 */
 	.rept 500-(.-sys_call_table)/4
 		.long sys_ni_syscall
 	.endr
diff --git a/arch/ia64/kernel/entry.S b/arch/ia64/kernel/entry.S
index c57a089..5c64afd 100644
--- a/arch/ia64/kernel/entry.S
+++ b/arch/ia64/kernel/entry.S
@@ -1697,8 +1697,7 @@
 	data8 sys_ni_syscall			// reserved for move_pages
 	data8 sys_getcpu
 	data8 sys_epoll_pwait			// 1305
-	data8 sys_utimensat
-.rept 1499-1307
+.rept 1499-1306
 	data8 sys_ni_syscall
 .endr
 	data8 sys_fairsched_vcpus
diff --git a/arch/sparc/kernel/systbls.S b/arch/sparc/kernel/systbls.S
index db6af53..10df38e 100644
--- a/arch/sparc/kernel/systbls.S
+++ b/arch/sparc/kernel/systbls.S
@@ -78,9 +78,7 @@ sys_call_table:
 /*285*/	.long sys_mkdirat, sys_mknodat, sys_fchownat, sys_futimesat, sys_fstatat64
 /*290*/	.long sys_unlinkat, sys_renameat, sys_linkat, sys_symlinkat, sys_readlinkat
 /*295*/	.long sys_fchmodat, sys_faccessat, sys_pselect6, sys_ppoll, sys_unshare
-/*300*/	.long sys_set_robust_list, sys_get_robust_list, sys_ni_syscall, sys_ni_syscall, sys_ni_syscall
-/*305*/	.long sys_ni_syscall, sys_ni_syscall, sys_ni_syscall, sys_ni_syscall, sys_ni_syscall
-/*310*/	.long sys_utimensat
+/*300*/	.long sys_set_robust_list, sys_get_robust_list
 
 #ifdef CONFIG_SUNOS_EMUL
 	/* Now the SunOS syscall table. */
diff --git a/arch/sparc64/kernel/systbls.S b/arch/sparc64/kernel/systbls.S
index 478a3ee..1f4528e 100644
--- a/arch/sparc64/kernel/systbls.S
+++ b/arch/sparc64/kernel/systbls.S
@@ -79,10 +79,9 @@ sys_call_table32:
 	.word sys_mkdirat, sys_mknodat, sys_fchownat, compat_sys_futimesat, compat_sys_fstatat64
 /*290*/	.word sys_unlinkat, sys_renameat, sys_linkat, sys_symlinkat, sys_readlinkat
 	.word sys_fchmodat, sys_faccessat, compat_sys_pselect6, compat_sys_ppoll, sys_unshare
-/*300*/	.word compat_sys_set_robust_list, compat_sys_get_robust_list, sys_ni_syscall, sys_ni_syscall, sys_ni_syscall
-	.word sys_ni_syscall, sys_ni_syscall, sys_ni_syscall, sys_ni_syscall, sys_ni_syscall
-/*310*/	.word compat_sys_utimensat
-	.rept 500-311
+/*300*/	.word compat_sys_set_robust_list, compat_sys_get_robust_list
+
+	.rept 500-302
 	.word sys_nis_syscall
 	.endr
 	.word sys_fairsched_mknod	/* 500 */
@@ -168,11 +167,9 @@ sys_call_table:
 	.word sys_mkdirat, sys_mknodat, sys_fchownat, sys_futimesat, sys_fstatat64
 /*290*/	.word sys_unlinkat, sys_renameat, sys_linkat, sys_symlinkat, sys_readlinkat
 	.word sys_fchmodat, sys_faccessat, sys_pselect6, sys_ppoll, sys_unshare
-/*300*/	.word sys_set_robust_list, sys_get_robust_list, sys_ni_syscall, sys_ni_syscall, sys_ni_syscall
-	.word sys_ni_syscall, sys_ni_syscall, sys_ni_syscall, sys_ni_syscall, sys_ni_syscall
-/*310*/	.word sys_utimensat
+/*300*/	.word sys_set_robust_list, sys_get_robust_list
 
-	.rept 500-311
+	.rept 500-302
 	.word sys_nis_syscall
 	.endr
 	.word sys_fairsched_mknod	/* 500 */
diff --git a/arch/x86_64/ia32/ia32entry.S b/arch/x86_64/ia32/ia32entry.S
index c2074d6..c84b122 100644
--- a/arch/x86_64/ia32/ia32entry.S
+++ b/arch/x86_64/ia32/ia32entry.S
@@ -736,5 +736,4 @@
 	.quad compat_sys_move_pages
 	.quad sys_getcpu
 	.quad compat_sys_epoll_pwait
-	.quad compat_sys_utimensat	/* 320 */
 ia32_syscall_end:		
diff --git a/fs/Makefile b/fs/Makefile
index 0db0b5b..dd7cf3f 100644
--- a/fs/Makefile
+++ b/fs/Makefile
@@ -10,7 +10,7 @@
 		ioctl.o readdir.o select.o fifo.o locks.o dcache.o inode.o \
 		attr.o bad_inode.o file.o filesystems.o namespace.o aio.o \
 		seq_file.o xattr.o libfs.o fs-writeback.o mpage.o direct-io.o \
-		ioprio.o pnode.o drop_caches.o splice.o sync.o utimes.o \
+		ioprio.o pnode.o drop_caches.o splice.o sync.o \
 		stack.o
 
 obj-$(CONFIG_INOTIFY)		+= inotify.o
diff --git a/fs/compat.c b/fs/compat.c
index 2d4b1f2..cd7eb61 100644
--- a/fs/compat.c
+++ b/fs/compat.c
@@ -83,31 +83,6 @@ int ve_compat_printk(int dst, const char *fmt, ...)
 	return ret;
 }
 
-asmlinkage long compat_sys_utimensat(unsigned int dfd, char __user *filename,
-					struct compat_timespec __user *t, int flags)
-{
-	struct timeval tv[2];
-
-	if  (t) {
-		if (get_user(tv[0].tv_sec, &t[0].tv_sec) || get_user(tv[0].tv_usec, &t[0].tv_nsec) ||
-		    get_user(tv[1].tv_sec, &t[1].tv_sec) || get_user(tv[1].tv_usec, &t[1].tv_nsec))
-			return -EFAULT;
-
-		if ((tv[0].tv_usec == UTIME_OMIT || tv[0].tv_usec == UTIME_NOW)
-		  && tv[0].tv_sec != 0)
-			return -EINVAL;
-		if ((tv[1].tv_usec == UTIME_OMIT || tv[1].tv_usec == UTIME_NOW)
-		  && tv[1].tv_sec != 0)
-			return -EINVAL;
-
-		if (tv[0].tv_usec == UTIME_OMIT && tv[1].tv_usec == UTIME_OMIT)
-			return 0;
-	}
-	tv[0].tv_usec/=1000; /* nsec->usec */
-	tv[1].tv_usec/=1000;
-	return do_utimes(dfd, filename, t ? tv : NULL, flags);
-}
-
 /*
  * Not all architectures have sys_utime, so implement this in terms
  * of sys_utimes.
diff --git a/fs/utimes.c b/fs/utimes.c
deleted file mode 100644
index ed14d6b..0000000
--- a/fs/utimes.c
+++ /dev/null
@@ -1,43 +0,0 @@
-#include <linux/compiler.h>
-#include <linux/file.h>
-#include <linux/fs.h>
-#include <linux/linkage.h>
-#include <linux/namei.h>
-#include <linux/sched.h>
-#include <linux/stat.h>
-#include <linux/utime.h>
-#include <asm/uaccess.h>
-#include <asm/unistd.h>
-
-
-asmlinkage long sys_utimensat(int dfd, char __user *filename, struct timespec __user *utimes, int flags)
-{
-	struct timespec tstimes[2];
-	struct timeval time[2];
-	if (utimes) {
-		if (copy_from_user(&tstimes, utimes, sizeof(tstimes)))
-			return -EFAULT;
-		if ((tstimes[0].tv_nsec == UTIME_OMIT ||
-		     tstimes[0].tv_nsec == UTIME_NOW) &&
-		     tstimes[0].tv_sec != 0)
-			return -EINVAL;
-		if ((tstimes[1].tv_nsec == UTIME_OMIT ||
-		     tstimes[1].tv_nsec == UTIME_NOW) &&
-		     tstimes[1].tv_sec != 0)
-			return -EINVAL;
-
-	/* Nothing to do, we must not even check the path. */
-	if (tstimes[0].tv_nsec == UTIME_OMIT &&
-	    tstimes[1].tv_nsec == UTIME_OMIT)
-		return 0;
-	}
-
-/* Note: declaration of lutimes from glibc is:
-int lutimes(const char *path, const struct timeval *times);
-while 2.6.23 had timespec instead of timeval, but sizeof(timespec)==sizeof(timeval) */
-	time[0].tv_sec =tstimes[0].tv_sec;
-	time[0].tv_usec=tstimes[0].tv_nsec/1000;
-	time[1].tv_sec =tstimes[1].tv_sec;
-	time[1].tv_usec=tstimes[1].tv_nsec/1000;
-	return do_utimes(dfd, filename, utimes ? time : NULL, flags);
-}
--- a/include/asm-i386/unistd.h
+++ b/include/asm-i386/unistd.h
@@ -325,7 +325,6 @@
 #define __NR_move_pages		317
 #define __NR_getcpu		318
 #define __NR_epoll_pwait	319
-#define __NR_utimensat		320
 #define __NR_fairsched_mknod	500     /* FairScheduler syscalls */
 #define __NR_fairsched_rmnod	501
 #define __NR_fairsched_chwt	502
--- a/include/asm-ia64/unistd.h
+++ b/include/asm-ia64/unistd.h
@@ -294,7 +294,6 @@
 /* 1303 reserved for move_pages */
 #define __NR_getcpu			1304
 #define __NR_epoll_pwait		1305
-#define __NR_utimensat			1306
 #define __NR_fairsched_vcpus		1499
 #define __NR_fairsched_mknod		1500
 #define __NR_fairsched_rmnod		1501
diff --git a/include/asm-powerpc/systbl.h b/include/asm-powerpc/systbl.h
index 519f5e7..61fb654 100644
--- a/include/asm-powerpc/systbl.h
+++ b/include/asm-powerpc/systbl.h
@@ -320,4 +320,3 @@ SYSCALL(getluid) /* 410 */
 SYSCALL(setluid)
 SYSCALL(setublimit)
 SYSCALL(ubstat)
-COMPAT_SYS_SPU(utimensat)
diff --git a/include/asm-powerpc/unistd.h b/include/asm-powerpc/unistd.h
index 886dde3..79e0785 100644
--- a/include/asm-powerpc/unistd.h
+++ b/include/asm-powerpc/unistd.h
@@ -324,8 +324,6 @@
 #define __NR_get_robust_list	299
 #define __NR_set_robust_list	300
 
-#define __NR_utimensat		304
-
 #define __NR_fairsched_mknod	400
 #define __NR_fairsched_rmnod	401
 #define __NR_fairsched_chwt	402
diff --git a/include/asm-sparc/unistd.h b/include/asm-sparc/unistd.h
index 88cb221..68380ad 100644
--- a/include/asm-sparc/unistd.h
+++ b/include/asm-sparc/unistd.h
@@ -318,9 +318,8 @@
 #define __NR_unshare		299
 #define __NR_set_robust_list	300
 #define __NR_get_robust_list	301
-#define __NR_utimensat		310
 
-#define NR_SYSCALLS		311
+#define NR_SYSCALLS		302
 
 #ifdef __KERNEL__
 /* WARNING: You MAY NOT add syscall numbers larger than 301, since
diff --git a/include/asm-sparc64/unistd.h b/include/asm-sparc64/unistd.h
index 450611d..2a13eef 100644
--- a/include/asm-sparc64/unistd.h
+++ b/include/asm-sparc64/unistd.h
@@ -320,7 +320,6 @@
 #define __NR_unshare		299
 #define __NR_set_robust_list	300
 #define __NR_get_robust_list	301
-#define __NR_utimensat		310
 #define __NR_fairsched_mknod	500     /* FairScheduler syscalls */
 #define __NR_fairsched_rmnod	501
 #define __NR_fairsched_chwt	502
--- a/include/asm-x86_64/unistd.h
+++ b/include/asm-x86_64/unistd.h
@@ -627,8 +627,6 @@
 __SYSCALL(__NR_vmsplice, sys_vmsplice)
 #define __NR_move_pages		279
 __SYSCALL(__NR_move_pages, sys_move_pages)
-#define __NR_utimensat          280
-__SYSCALL(__NR_utimensat, sys_utimensat)
 #define __NR_epoll_pwait        281
 __SYSCALL(__NR_epoll_pwait, sys_epoll_pwait)
 #define __NR_fairsched_vcpus	499
diff --git a/include/linux/compat.h b/include/linux/compat.h
index 3483fce..ee8700c 100644
--- a/include/linux/compat.h
+++ b/include/linux/compat.h
@@ -230,7 +230,6 @@ extern int compat_printk(const char *fmt, ...);
 extern int ve_compat_printk(int dst, const char *fmt, ...);
 
 extern long compat_nanosleep_restart(struct restart_block *restart);
-asmlinkage long compat_sys_utimensat(unsigned int dfd, char __user *filename,struct compat_timespec __user *t, int flags);
 
 #endif /* CONFIG_COMPAT */
 #endif /* _LINUX_COMPAT_H */
diff --git a/include/linux/stat.h b/include/linux/stat.h
index ac64372..8669291 100644
--- a/include/linux/stat.h
+++ b/include/linux/stat.h
@@ -53,9 +53,6 @@
 #define S_IWUGO		(S_IWUSR|S_IWGRP|S_IWOTH)
 #define S_IXUGO		(S_IXUSR|S_IXGRP|S_IXOTH)
 
-#define UTIME_NOW      ((1l << 30) - 1l)
-#define UTIME_OMIT     ((1l << 30) - 2l)
-
 #include <linux/types.h>
 #include <linux/time.h>
 
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index 505b4c6..008f04c 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -603,6 +603,5 @@
 asmlinkage long sys_set_robust_list(struct robust_list_head __user *head,
 				    size_t len);
 asmlinkage long sys_getcpu(unsigned *cpu, unsigned *node, struct getcpu_cache *cache);
-asmlinkage long sys_utimensat(int dfd, char __user *filename,struct timespec __user *utimes, int flags);
 
 #endif
