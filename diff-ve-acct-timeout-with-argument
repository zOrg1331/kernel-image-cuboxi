X-Account-Key: account4
X-UIDL: 0d2a32127c6f022e
X-Mozilla-Status: 0001
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                 
Received: from relay.parallels.com (relay.parallels.com [195.214.232.42])
	by relay.sw.ru (8.13.4/8.13.4) with ESMTP id o2OICEIp009182
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Wed, 24 Mar 2010 21:12:15 +0300 (MSK)
Received: from mx1.parallels.com ([64.131.89.18])
	by relay.parallels.com with esmtps (TLSv1:AES256-SHA:256)
	(Exim 4.71)
	(envelope-from <vgusev@openvz.org>)
	id 1NuV3t-0008IW-KS; Wed, 24 Mar 2010 21:12:14 +0300
Received: from mailhub.sw.ru ([195.214.232.25] helo=relay.sw.ru)
	by mx1.parallels.com with esmtps (TLSv1:AES256-SHA:256)
	(Exim 4.71)
	(envelope-from <vgusev@openvz.org>)
	id 1NuV3s-00047e-LC; Wed, 24 Mar 2010 14:12:12 -0400
Received: from localhost.localdomain ([10.30.18.218])
	by relay.sw.ru (8.13.4/8.13.4) with ESMTP id o2OIC3cs007235;
	Wed, 24 Mar 2010 21:12:09 +0300 (MSK)
From: Vitaliy Gusev <vgusev@openvz.org>
To: xemul@openvz.org
Cc: vz@lists.sw.ru, Vitaliy Gusev <vgusev@openvz.org>
Subject: [2.6.18][PATCH 4/8] pacct: make acct_timeout accept argument as pointer to bsd_acct_struct
Date: Wed, 24 Mar 2010 21:17:25 +0300
Message-Id: <1269454649-887-5-git-send-email-vgusev@openvz.org>
X-Mailer: git-send-email 1.6.0.2
In-Reply-To: <1269454649-887-1-git-send-email-vgusev@openvz.org>
References: <1269454649-887-1-git-send-email-vgusev@openvz.org>

Our target is using bsd accounting for many VE, so acct_timeout timer
handler will be called for many bsd_acct_struct.

Signed-off-by: Vitaliy Gusev <vgusev@openvz.org>
---
 kernel/acct.c |   10 ++++++----
 1 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/kernel/acct.c b/kernel/acct.c
index 51424c7..817850b 100644
--- a/kernel/acct.c
+++ b/kernel/acct.c
@@ -95,9 +95,11 @@ static struct bsd_acct_struct acct_globals __cacheline_aligned;
 /*
  * Called whenever the timer says to check the free space.
  */
-static void acct_timeout(unsigned long unused)
+static void acct_timeout(unsigned long x)
 {
-	acct_globals.needcheck = 1;
+	struct bsd_acct_struct *acct = (struct bsd_acct_struct *)x;
+
+	acct->needcheck = 1;
 }
 
 /*
@@ -188,8 +190,8 @@ static void acct_file_reopen(struct file *file)
 		acct_globals.needcheck = 0;
 		acct_globals.active = 1;
 		/* It's been deleted if it was used before so this is safe */
-		init_timer(&acct_globals.timer);
-		acct_globals.timer.function = acct_timeout;
+		setup_timer(&acct_globals.timer, acct_timeout,
+			    (unsigned long)&acct_globals);
 		acct_globals.timer.expires = jiffies + ACCT_TIMEOUT*HZ;
 		add_timer(&acct_globals.timer);
 	}
-- 
1.6.0.2


