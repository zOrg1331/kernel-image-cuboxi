From: Stanislaw Gruszka <sgruszka@redhat.com>
Date: Mon, 22 Nov 2010 14:24:04 -0500
Subject: [wireless] ieee80211: fix deauthentication
Message-id: <1290435844-5282-2-git-send-email-sgruszka@redhat.com>
Patchwork-id: 29538
O-Subject: [RHEL5.6 PATCH 2/2] ieee80211: fix deauthentication
Bugzilla: 644367
RH-Acked-by: John Linville <linville@redhat.com>
RH-Acked-by: Ivan Vecera <ivecera@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

BZ#644367

Description:
Allow to deauthentication success to clean up and free resource even if
we are unable to send deauthentification request. Also clean up when
driver stopped mac, and we are still trying to authenticate. All this
prevent authentication problems, when we are trying to connect after
previous disconnect.

Upstream:
N/A, ieee80211 was removed and replaced by mac80211.

Testing:
Tested by me with ZyDAS devices.

diff --git a/net/ieee80211/softmac/ieee80211softmac_auth.c b/net/ieee80211/softmac/ieee80211softmac_auth.c
index 37d620d..595407c 100644
--- a/net/ieee80211/softmac/ieee80211softmac_auth.c
+++ b/net/ieee80211/softmac/ieee80211softmac_auth.c
@@ -68,6 +68,9 @@ ieee80211softmac_auth_req(struct ieee80211softmac_device *mac,
 	return 0;
 }
 
+static void
+ieee80211softmac_deauth_from_net(struct ieee80211softmac_device *mac,
+	struct ieee80211softmac_network *net);
 
 /* Sends an auth request to the desired AP and handles timeouts */
 static void
@@ -91,6 +94,9 @@ ieee80211softmac_auth_queue(void *data)
 		if (unlikely(!mac->running)) {
 			/* Prevent reschedule on workqueue flush */
 			spin_unlock_irqrestore(&mac->lock, flags);
+			if (net->authenticated || net->authenticating)
+				ieee80211softmac_deauth_from_net(mac, net);
+
 			return;
 		}
 		net->authenticated = 0;
@@ -347,8 +353,6 @@ int
 ieee80211softmac_deauth_req(struct ieee80211softmac_device *mac,
 	struct ieee80211softmac_network *net, int reason)
 {
-	int ret;
-
 	/* Make sure the network is authenticated */
 	if (!net->authenticated)
 	{
@@ -358,8 +362,7 @@ ieee80211softmac_deauth_req(struct ieee80211softmac_device *mac,
 	}
 
 	/* Send the de-auth packet */
-	if((ret = ieee80211softmac_send_mgt_frame(mac, net, IEEE80211_STYPE_DEAUTH, reason)))
-		return ret;
+	ieee80211softmac_send_mgt_frame(mac, net, IEEE80211_STYPE_DEAUTH, reason);
 
 	ieee80211softmac_deauth_from_net(mac, net);
 	return 0;
