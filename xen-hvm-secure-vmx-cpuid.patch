From: Andrew Jones <drjones@redhat.com>
Date: Fri, 20 May 2011 08:22:46 -0000
Subject: [xen] hvm: secure vmx cpuid
Message-id: <1305879766-28277-1-git-send-email-drjones@redhat.com>
Patchwork-id: 4580
O-Subject: [kernel team] [RHEL5.7 PATCH] EMBARGOED CVE-2011-1936 xen: vmx
	secure cpuid
Bugzilla: 706323
CVE: CVE-2011-1936
RH-Acked-by: Laszlo Ersek <lersek@redhat.com>
RH-Acked-by: Petr Matousek <pmatouse@redhat.com>
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=706323

Petr Matousek found a domain_crash that could be reached from cpuid,
which is an unprivileged instruction that gets emulated by the
hypervisor. This could be used by an unprivileged user to crash their own
domain. The fix is to switch the domain_crash to a #GP injection. This
particular cpuid leaf is not documented and was implemented to support
vmxassist. Upstream has long stopped using vmxassist, thus this patch is
RHEL only.

Brew: https://brewweb.devel.redhat.com/taskinfo?taskID=3339330
Tested by me on a local build using the following reproducer run from
a rhel6 guest. Before the patch this crashed the domU, after the patch
the process simply segfaulted.

main() { asm("cpuid" : : "a" (0x40000003), "d" (0), "c" (1)); }
---
 arch/x86/hvm/vmx/vmx.c |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)
diff --git a/arch/x86/hvm/vmx/vmx.c b/arch/x86/hvm/vmx/vmx.c
index 464cdab..bdc6dc1 100644
--- a/arch/x86/hvm/vmx/vmx.c
+++ b/arch/x86/hvm/vmx/vmx.c
@@ -1676,7 +1676,7 @@ static void vmx_do_cpuid(struct cpu_user_regs *regs)
         if ( (value & 7) || (mfn == INVALID_MFN) ||
              !v->arch.hvm_vmx.vmxassist_enabled )
         {
-            domain_crash(v->domain);
+            hvm_inject_exception(TRAP_gp_fault, 0, 0);
             return;
         }
 
