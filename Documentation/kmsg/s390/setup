/*?
 * Text: "Execute protection active, mvcos available\n"
 * Severity: Informational
 * Description:
 * The kernel parameter 'noexec' has been specified. The kernel will
 * honor the execute bit of mappings and will use the mvcos instruction
 * to copy between the user and kernel address space.
 * User action:
 * None.
 */

/*?
 * Text: "Execute protection active, mvcos not available\n"
 * Severity: Informational
 * Description:
 * The kernel parameter 'noexec' has been specified. The kernel will
 * honor the execute bit of mappings. The mvcos instruction is not
 * available and the kernel will use the slower page table walk method
 * to copy between the user and kernel address space.
 * User action:
 * None.
 */

/*?
 * Text: "Address spaces switched, mvcos available\n"
 * Severity: Informational
 * Description:
 * The kernel parameter 'switch_amode' has been specified. The kernel
 * will use the primary address space for user space processes and the
 * home address space for the kernel. The mvcos instruction is used to
 * copy between the user and kernel address space.
 * User action:
 * None.
 */

/*?
 * Text: "Address spaces switched, mvcos not available\n"
 * Severity: Informational
 * Description:
 * The kernel parameter 'switch_amode' has been specified. The kernel
 * will use the primary address space for user space processes and the
 * home address space for the kernel. The mvcos instruction is not
 * available and the kernel will use the slower page table walk method
 * to copy between the user and kernel address space.
 * User action:
 * None.
 */

/*?
 * Text: "initrd extends beyond end of memory (0x%08lx > 0x%08lx) disabling initrd\n"
 * Severity: Error
 * Parameter:
 *   @1: start address of the initial RAM disk
 *   @2: memory end address
 * Description:
 * The load address and the size of the initial RAM disk result in an end
 * address of the initial RAM disk that is beyond the end of the system
 * memory.
 * User action:
 * Lower the load address of the initial RAM disk, reduce the size of the
 * initial RAM disk, or increase the size if the system memory to make the
 * initial RAM disk fit into the memory.
 */

/*?
 * Text: "Moving initrd (0x%08lx -> 0x%08lx, size: %ld)\n"
 * Severity: Informational
 * Parameter:
 *   @1: old start address of the initial RAM disk
 *   @2: new start address of the initial RAM disk
 *   @3: size of the initial RAM disk
 * Description:
 * The location of the initial RAM disk conflicted with the boot memory bitmap.
 * To resolve the conflict the initial RAM disk has been moved to a new
 * location.
 * User action:
 * None.
 */

/*?
 * Text: "Linux is running as a z/VM guest operating system in 31-bit mode\n"
 * Severity: Informational
 * Description:
 * The 31-bit Linux kernel detected that it is running as a guest operating
 * system of the z/VM hypervisor.
 * User action:
 * None.
 */

/*?
 * Text: "Linux is running natively in 31-bit mode\n"
 * Severity: Informational
 * Description:
 * The 31-bit Linux kernel detected that it is running on an IBM mainframe,
 * either as the sole operating system in an LPAR or as the sole operating
 * system on the entire mainframe. The Linux kernel is not running as a
 * guest operating system of the z/VM hypervisor.
 * User action:
 * None.
 */

/*?
 * Text: "The hardware system has IEEE compatible floating point units\n"
 * Severity: Informational
 * Description:
 * The Linux kernel detected that it is running on a hardware system with
 * CPUs that have IEEE compatible floating point units.
 * User action:
 * None.
 */

/*?
 * Text: "The hardware system has no IEEE compatible floating point units\n"
 * Severity: Informational
 * Description:
 * The Linux kernel detected that it is running on a hardware system with
 * CPUs that do not have IEEE compatible floating point units.
 * User action:
 * None.
 */

/*?
 * Text: "Linux is running as a z/VM guest operating system in 64-bit mode\n"
 * Severity: Informational
 * Description:
 * The 64-bit Linux kernel detected that it is running as a guest operating
 * system of the z/VM hypervisor.
 * User action:
 * None.
 */

/*?
 * Text: "Linux is running natively in 64-bit mode\n"
 * Severity: Informational
 * Description:
 * The 64-bit Linux kernel detected that it is running on an IBM mainframe,
 * either as the sole operating system in an LPAR or as the sole operating
 * system on the entire mainframe. The Linux kernel is not running as a
 * guest operating system of the z/VM hypervisor.
 * User action:
 * None.
 */

/*?
 * Text: "Defining the Linux kernel NSS failed with rc=%d\n"
 * Severity: Error
 * Parameter:
 *   @1: return code
 * Description:
 * The Linux kernel could not define the named saved system (NSS) with
 * the z/VM CP DEFSYS command. The return code represents the numeric
 * portion of the CP DEFSYS error message.
 * User action:
 * For return code 1, the z/VM guest virtual machine is not authorized
 * to define named saved systems.
 * Ensure that the z/VM guest virtual machine is authorized to issue
 * the CP DEFSYS command (typically privilege class E).
 * For other return codes, see the help and message documentation for
 * the CP DEFSYS command.
 */

/*?
 * Text: "Saving the Linux kernel NSS failed with rc=%d\n"
 * Severity: Error
 * Parameter:
 *   @1: return code
 * Description:
 * The Linux kernel could not save the named saved system (NSS) with
 * the z/VM CP SAVESYS command. The return code represents the numeric
 * portion of the CP SAVESYS error message.
 * User action:
 * For return code 1, the z/VM guest virtual machine is not authorized
 * to save named saved systems.
 * Ensure that the z/VM guest virtual machine is authorized to issue
 * the CP SAVESYS command (typically privilege class E).
 * For other return codes, see the help and message documentation for
 * the CP SAVESYS command.
 */

/*? Text: "Linux is running under KVM in 64-bit mode\n" */

