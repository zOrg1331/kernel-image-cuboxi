From: Chad Dupuis <cdupuis@redhat.com>
Date: Tue, 3 Aug 2010 13:49:51 -0400
Subject: [net] netxen: update version to 4.0.72
Message-id: <20100803134707.2239.53524.sendpatchset@localhost.localdomain>
Patchwork-id: 27319
O-Subject: [RHEL 5.6 PATCH 17/44] netxen: update version to 4.0.72
Bugzilla: 562937
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>

Bugzilla
========

562937

Upstream Status
===============

net-2.6 commit id c651a8c160647b2eb6e61fb485f307e3781415e8

Description
===========

>From 72613ca820a6cd8251f76b6a7d7c02ec63454533 Mon Sep 17 00:00:00 2001
From: Amit Kumar Salecha <amit.salecha@qlogic.com>
Date: Thu, 7 Jan 2010 22:10:17 +0000
Subject: [PATCH] netxen: update version to 4.0.72

Signed-off-by: Amit Kumar Salecha <amit.salecha@qlogic.com>
Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/netxen/netxen_nic.h b/drivers/net/netxen/netxen_nic.h
index 0060fc6..ad067c5 100644
--- a/drivers/net/netxen/netxen_nic.h
+++ b/drivers/net/netxen/netxen_nic.h
@@ -54,8 +54,8 @@
 
 #define _NETXEN_NIC_LINUX_MAJOR 4
 #define _NETXEN_NIC_LINUX_MINOR 0
-#define _NETXEN_NIC_LINUX_SUBVERSION 65
-#define NETXEN_NIC_LINUX_VERSIONID  "4.0.65"
+#define _NETXEN_NIC_LINUX_SUBVERSION 72
+#define NETXEN_NIC_LINUX_VERSIONID  "4.0.72"
 
 #define NETXEN_VERSION_CODE(a, b, c)	(((a) << 24) + ((b) << 16) + (c))
 #define _major(v)	(((v) >> 24) & 0xff)
diff --git a/drivers/net/netxen/netxen_nic_main.c b/drivers/net/netxen/netxen_nic_main.c
index 18eaaba..a6a11ea 100644
--- a/drivers/net/netxen/netxen_nic_main.c
+++ b/drivers/net/netxen/netxen_nic_main.c
@@ -35,7 +35,9 @@
 #include <linux/ipv6.h>
 #include <linux/inetdevice.h>
 #include <linux/sysfs.h>
+#ifdef CONFIG_PCIEAER
 #include <linux/aer.h>
+#endif
 
 MODULE_DESCRIPTION("QLogic/NetXen (1/10) GbE Converged Ethernet Driver");
 MODULE_LICENSE("GPL");
@@ -86,7 +88,9 @@ static void netxen_remove_sysfs_entries(struct netxen_adapter *adapter);
 static void netxen_create_diag_entries(struct netxen_adapter *adapter);
 static void netxen_remove_diag_entries(struct netxen_adapter *adapter);
 
+#ifdef CONFIG_PCIEAER
 static int nx_dev_request_aer(struct netxen_adapter *adapter);
+#endif
 static int nx_decr_dev_ref_cnt(struct netxen_adapter *adapter);
 static int netxen_can_start_firmware(struct netxen_adapter *adapter);
 
@@ -1288,8 +1292,10 @@ netxen_nic_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	if ((err = pci_request_regions(pdev, netxen_nic_driver_name)))
 		goto err_out_disable_pdev;
 
+#ifdef CONFIG_PCIEAER
 	if (NX_IS_REVISION_P3(pdev->revision))
 		pci_enable_pcie_error_reporting(pdev);
+#endif
 
 	pci_set_master(pdev);
 
@@ -1438,8 +1444,10 @@ static void __devexit netxen_nic_remove(struct pci_dev *pdev)
 
 	netxen_release_firmware(adapter);
 
+#ifdef CONFIG_PCIEAER
 	if (NX_IS_REVISION_P3(pdev->revision))
 		pci_disable_pcie_error_reporting(pdev);
+#endif
 
 	pci_release_regions(pdev);
 	pci_disable_device(pdev);
@@ -1517,6 +1525,7 @@ err_out:
 	return err;
 }
 
+#ifdef CONFIG_PCIEAER
 static pci_ers_result_t netxen_io_error_detected(struct pci_dev *pdev,
 						pci_channel_state_t state)
 {
@@ -1548,6 +1557,7 @@ static void netxen_io_resume(struct pci_dev *pdev)
 {
 	pci_cleanup_aer_uncorrect_error_status(pdev);
 }
+#endif
 
 static void netxen_nic_shutdown(struct pci_dev *pdev)
 {
@@ -2194,6 +2204,7 @@ nx_decr_dev_ref_cnt(struct netxen_adapter *adapter)
 	return count;
 }
 
+#ifdef CONFIG_PCIEAER
 static int
 nx_dev_request_aer(struct netxen_adapter *adapter)
 {
@@ -2215,6 +2226,7 @@ nx_dev_request_aer(struct netxen_adapter *adapter)
 	netxen_api_unlock(adapter);
 	return ret;
 }
+#endif
 
 static int
 nx_dev_request_reset(struct netxen_adapter *adapter)
@@ -2279,6 +2291,7 @@ netxen_cancel_fw_work(struct netxen_adapter *adapter)
 	while (test_and_set_bit(__NX_RESETTING, &adapter->state))
 		msleep(10);
 
+	flush_scheduled_work();
 	cancel_delayed_work(&adapter->fw_work);
 }
 
@@ -2857,11 +2870,13 @@ netxen_config_indev_addr(struct net_device *dev, unsigned long event)
 { }
 #endif
 
+#ifdef CONFIG_PCIEAER
 static struct pci_error_handlers netxen_err_handler = {
 	.error_detected = netxen_io_error_detected,
 	.slot_reset = netxen_io_slot_reset,
 	.resume = netxen_io_resume,
 };
+#endif
 
 static struct pci_driver netxen_driver = {
 	.name = netxen_nic_driver_name,
@@ -2873,7 +2888,9 @@ static struct pci_driver netxen_driver = {
 	.resume = netxen_nic_resume,
 #endif
 	.shutdown = netxen_nic_shutdown,
+#ifdef CONFIG_PCIEAER
 	.err_handler = &netxen_err_handler
+#endif
 };
 
 static int __init netxen_init_module(void)
