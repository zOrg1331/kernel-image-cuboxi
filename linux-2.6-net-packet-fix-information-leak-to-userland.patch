From: Jiri Pirko <jpirko@redhat.com>
Date: Sun, 14 Nov 2010 16:06:24 -0500
Subject: [net] packet: fix information leak to userland
Message-id: <20101114160623.GB2762@psychotron.redhat.com>
Patchwork-id: 29226
O-Subject: [RHEL5.6 patch] BZ649898 CVE-2010-3876 net: packet: fix information
	leak to userland
Bugzilla: 649898
RH-Acked-by: David S. Miller <davem@redhat.com>
RH-Acked-by: Amerigo Wang <amwang@redhat.com>
RH-Acked-by: Stanislaw Gruszka <sgruszka@redhat.com>

BZ649898
https://bugzilla.redhat.com/show_bug.cgi?id=649898

Description:
packet_getname_spkt() doesn't initialize all members of sa_data field of
sockaddr struct if strlen(dev->name) < 13.  This structure is then copied
to userland.  It leads to leaking of contents of kernel stack memory.
We have to fully fill sa_data with strncpy() instead of strlcpy().

The same with packet_getname(): it doesn't initialize sll_pkttype field of
sockaddr_ll.  Set it to zero.

Upstream:
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=67286640f638f5ad41a946b9a3dc75327950248f

Brew:
https://brewweb.devel.redhat.com/taskinfo?taskID=2893367

Jirka

Signed-off-by: Jiri Pirko <jpirko@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c
index a913636..21f3a7a 100644
--- a/net/packet/af_packet.c
+++ b/net/packet/af_packet.c
@@ -1189,7 +1189,7 @@ static int packet_getname_spkt(struct socket *sock, struct sockaddr *uaddr,
 	uaddr->sa_family = AF_PACKET;
 	dev = dev_get_by_index(pkt_sk(sk)->ifindex);
 	if (dev) {
-		strlcpy(uaddr->sa_data, dev->name, 15);
+		strncpy(uaddr->sa_data, dev->name, 14);
 		dev_put(dev);
 	} else
 		memset(uaddr->sa_data, 0, 14);
@@ -1213,6 +1213,7 @@ static int packet_getname(struct socket *sock, struct sockaddr *uaddr,
 	sll->sll_family = AF_PACKET;
 	sll->sll_ifindex = po->ifindex;
 	sll->sll_protocol = po->num;
+	sll->sll_pkttype = 0;
 	dev = dev_get_by_index(po->ifindex);
 	if (dev) {
 		sll->sll_hatype = dev->type;
