From: Larry Woodman <lwoodman@redhat.com>
Date: Mon, 14 Apr 2008 15:01:31 -0400
Subject: [mm] do not limit locked memory when using RLIM_INFINITY
Message-id: 1208199691.19199.11.camel@dhcp83-220.boston.redhat.com
O-Subject: [RHEL5-U3 patch] Do not limit locked memory when RLIMIT_MEMLOCK is RLIM_INFINITY
Bugzilla: 442426
RH-Acked-by: Dave Anderson <anderson@redhat.com>
RH-Acked-by: Pete Zaitcev <zaitcev@redhat.com>
RH-Acked-by: Neil Horman <nhorman@redhat.com>

This RHEL5 patch fixes a bug in mm/mlock.c on 32-bit architectures that
prevents a user from locking more than 4GB of shared memory, or
allocating more than 4GB of shared memory in hugepages, when rlim
[RLIMIT_MEMLOCK] is set to RLIM_INFINITY.

Fixes BZ 442426, committed upstream in 2.6.23.

 mm/mlock.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/mm/mlock.c b/mm/mlock.c
index b90c595..1304baf 100644
--- a/mm/mlock.c
+++ b/mm/mlock.c
@@ -233,9 +233,12 @@ int user_shm_lock(size_t size, struct user_struct *user)
 
 	locked = (size + PAGE_SIZE - 1) >> PAGE_SHIFT;
 	lock_limit = current->signal->rlim[RLIMIT_MEMLOCK].rlim_cur;
+	if (lock_limit == RLIM_INFINITY)
+		allowed = 1;
 	lock_limit >>= PAGE_SHIFT;
 	spin_lock(&shmlock_user_lock);
-	if (locked + user->locked_shm > lock_limit && !capable(CAP_IPC_LOCK))
+	if (!allowed &&
+	     locked + user->locked_shm > lock_limit && !capable(CAP_IPC_LOCK))
 		goto out;
 	get_uid(user);
 	user->locked_shm += locked;
