From: Rob Evers <revers@redhat.com>
Date: Wed, 27 Oct 2010 15:23:06 -0400
Subject: [scsi] lpfc: fix possible roundrobin failover failure
Message-id: <1288192999-24221-15-git-send-email-revers@redhat.com>
Patchwork-id: 28939
O-Subject: [RHEL5.6 PATCH 14/27] lpfc: Fixed cases of skipping possible
	roundrobin fail over of multiple eligible FCFs (CR: 110048)
Bugzilla: 639028

lpfc: Fixed cases of skipping possible roundrobin fail over of multiple eligible FCFs (CR: 110048)

From: Rob Evers on behalf of Emulex <revers@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=636289

diff --git a/drivers/scsi/lpfc/lpfc_hbadisc.c b/drivers/scsi/lpfc/lpfc_hbadisc.c
index 1f7926d..2660d3f 100644
--- a/drivers/scsi/lpfc/lpfc_hbadisc.c
+++ b/drivers/scsi/lpfc/lpfc_hbadisc.c
@@ -2245,13 +2245,11 @@ read_next_fcf:
 			 */
 
 			/*
-			 * Mark the initial FCF discovery completed and
-			 * the start of the first round of the roundrobin
+			 * Set stage for the first round of the roundrobin
 			 * FCF failover.
 			 */
 			spin_lock_irq(&phba->hbalock);
-			phba->fcf.fcf_flag &=
-					~(FCF_INIT_DISC | FCF_REDISC_RRU);
+			phba->fcf.fcf_flag &= ~FCF_REDISC_RRU;
 			spin_unlock_irq(&phba->hbalock);
 			/*
 			 * Set up the initial registered FCF index for FLOGI
diff --git a/drivers/scsi/lpfc/lpfc_init.c b/drivers/scsi/lpfc/lpfc_init.c
index ddf6528..25b540c 100644
--- a/drivers/scsi/lpfc/lpfc_init.c
+++ b/drivers/scsi/lpfc/lpfc_init.c
@@ -2281,10 +2281,9 @@ lpfc_stop_vport_timers(struct lpfc_vport *vport)
 void
 __lpfc_sli4_stop_fcf_redisc_wait_timer(struct lpfc_hba *phba)
 {
-	/* Clear pending FCF rediscovery wait and failover in progress flags */
-	phba->fcf.fcf_flag &= ~(FCF_REDISC_PEND |
-				FCF_DEAD_DISC |
-				FCF_ACVL_DISC);
+	/* Clear pending FCF rediscovery wait flag */
+	phba->fcf.fcf_flag &= ~FCF_REDISC_PEND;
+
 	/* Now, try to stop the timer */
 	del_timer(&phba->fcf.redisc_wait);
 }
@@ -2308,6 +2307,8 @@ lpfc_sli4_stop_fcf_redisc_wait_timer(struct lpfc_hba *phba)
 		return;
 	}
 	__lpfc_sli4_stop_fcf_redisc_wait_timer(phba);
+	/* Clear failover in progress flags */
+	phba->fcf.fcf_flag &= ~(FCF_DEAD_DISC | FCF_ACVL_DISC);
 	spin_unlock_irq(&phba->hbalock);
 }
 
