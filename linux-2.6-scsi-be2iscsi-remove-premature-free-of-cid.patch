From: Mike Christie <mchristi@redhat.com>
Date: Sun, 17 Oct 2010 23:02:35 -0400
Subject: [scsi] be2iscsi: remove premature free of cid
Message-id: <1287356555-15298-1-git-send-email-mchristi@redhat.com>
Patchwork-id: 28779
O-Subject: [PATCH RHEL 5.6]: be2iscsi: Remove premature free of cid
Bugzilla: 640029
RH-Acked-by: Tomas Henzl <thenzl@redhat.com>

From: Mike Christie <mchristi@redhat.com>

This is for bz 640029.

The driver was freeing the connection id while it was in use. This
would cause iscsi connections to get the same cid and that causes
the driver/firmware to route IO to the wrong connection.

Patch is in the scsi maintainer's tree in
commit af4c609c0d645f196b570c58dd4ee878ff3afd24

Emulex tested and made the patch. I also tested it with
multipath sessions/targets at the same time to verify
the patch fixes the problem.


diff --git a/drivers/scsi/be2iscsi/be_iscsi.c b/drivers/scsi/be2iscsi/be_iscsi.c
index 9275fef..209a60f 100644
--- a/drivers/scsi/be2iscsi/be_iscsi.c
+++ b/drivers/scsi/be2iscsi/be_iscsi.c
@@ -536,7 +536,6 @@ static int beiscsi_open_conn(struct iscsi_endpoint *ep,
 	if (beiscsi_ep->ep_cid > (phba->fw_config.iscsi_cid_start +
 				  phba->params.cxns_per_ctrl * 2)) {
 		SE_DEBUG(DBG_LVL_1, "Failed in allocate iscsi cid\n");
-		beiscsi_put_cid(phba, beiscsi_ep->ep_cid);
 		goto free_ep;
 	}
 
@@ -573,7 +572,6 @@ static int beiscsi_open_conn(struct iscsi_endpoint *ep,
 		SE_DEBUG(DBG_LVL_1, "mgmt_open_connection Failed"
 				    " status = %d extd_status = %d\n",
 				    status, extd_status);
-		beiscsi_put_cid(phba, beiscsi_ep->ep_cid);
 		free_mcc_tag(&phba->ctrl, tag);
 		pci_free_consistent(phba->ctrl.pdev, nonemb_cmd.size,
 			    nonemb_cmd.va, nonemb_cmd.dma);
@@ -588,7 +586,6 @@ static int beiscsi_open_conn(struct iscsi_endpoint *ep,
 		beiscsi_ep->cid_vld = 1;
 		SE_DEBUG(DBG_LVL_8, "mgmt_open_connection Success\n");
 	}
-	beiscsi_put_cid(phba, beiscsi_ep->ep_cid);
 	pci_free_consistent(phba->ctrl.pdev, nonemb_cmd.size,
 			    nonemb_cmd.va, nonemb_cmd.dma);
 	return 0;
