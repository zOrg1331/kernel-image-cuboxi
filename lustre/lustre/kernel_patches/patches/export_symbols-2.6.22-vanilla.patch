Index: linux-2.6.27.21-0.1/fs/filesystems.c
===================================================================
--- linux-2.6.27.21-0.1.orig/fs/filesystems.c
+++ linux-2.6.27.21-0.1/fs/filesystems.c
@@ -28,7 +28,9 @@
  */
 
 static struct file_system_type *file_systems;
-static DEFINE_RWLOCK(file_systems_lock);
+DEFINE_RWLOCK(file_systems_lock);
+
+EXPORT_SYMBOL(file_systems_lock);
 
 /* WARNING: This can be used only if we _already_ own a reference */
 void get_filesystem(struct file_system_type *fs)
Index: linux-2.6.27.21-0.1/fs/namespace.c
===================================================================
--- linux-2.6.27.21-0.1.orig/fs/namespace.c
+++ linux-2.6.27.21-0.1/fs/namespace.c
@@ -1617,6 +1617,7 @@ static noinline int do_new_mount(struct 
 
 	return do_add_mount(mnt, &nd->path, mnt_flags, NULL);
 }
+EXPORT_SYMBOL(set_fs_pwd);
 
 /*
  * add a mount into a namespace's mount tree
Index: linux-2.6.27.21-0.1/fs/dcache.c
===================================================================
--- linux-2.6.27.21-0.1.orig/fs/dcache.c
+++ linux-2.6.27.21-0.1/fs/dcache.c
@@ -2212,6 +2212,7 @@ int is_subdir(struct dentry * new_dentry
 
 	return result;
 }
+EXPORT_SYMBOL(is_subdir);
 
 void d_genocide(struct dentry *root)
 {
Index: linux-2.6.27.21-0.1/include/linux/fs.h
===================================================================
--- linux-2.6.27.21-0.1.orig/include/linux/fs.h
+++ linux-2.6.27.21-0.1/include/linux/fs.h
@@ -1997,6 +1997,7 @@ static inline ssize_t blockdev_direct_IO
 
 extern const struct file_operations generic_ro_fops;
 
+extern rwlock_t file_systems_lock;
 #define special_file(m) (S_ISCHR(m)||S_ISBLK(m)||S_ISFIFO(m)||S_ISSOCK(m))
 
 extern int vfs_readlink(struct dentry *, char __user *, int, const char *);
