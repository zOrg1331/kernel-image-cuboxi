--- linux-2.6.9.orig/drivers/md/raid6main.c	2006-09-07 23:10:43.000000000 +0800
+++ linux-2.6.9/drivers/md/raid6main.c	2006-09-07 23:11:25.000000000 +0800
@@ -33,7 +33,7 @@
  * Stripe cache
  */
 
-#define NR_STRIPES		256
+static int raid6_nr_stripes = 256 * 8;
 #define STRIPE_SIZE		PAGE_SIZE
 #define STRIPE_SHIFT		(PAGE_SHIFT - 9)
 #define STRIPE_SECTORS		(STRIPE_SIZE>>9)
@@ -111,7 +111,7 @@ static inline void __release_stripe(raid
 			list_add_tail(&sh->lru, &conf->inactive_list);
 			atomic_dec(&conf->active_stripes);
 			if (!conf->inactive_blocked ||
-			    atomic_read(&conf->active_stripes) < (NR_STRIPES*3/4))
+			    atomic_read(&conf->active_stripes) < (raid6_nr_stripes*3/4))
 				wake_up(&conf->wait_for_stripe);
 		}
 	}
@@ -274,7 +274,7 @@ static struct stripe_head *get_active_st
 				conf->inactive_blocked = 1;
 				wait_event_lock_irq(conf->wait_for_stripe,
 						    !list_empty(&conf->inactive_list) &&
-						    (atomic_read(&conf->active_stripes) < (NR_STRIPES *3/4)
+						    (atomic_read(&conf->active_stripes) < (raid6_nr_stripes *3/4)
 						     || !conf->inactive_blocked),
 						    conf->device_lock,
 						    unplug_slaves(conf->mddev);
@@ -1805,7 +1805,7 @@ static int run (mddev_t *mddev)
 	conf->chunk_size = mddev->chunk_size;
 	conf->level = mddev->level;
 	conf->algorithm = mddev->layout;
-	conf->max_nr_stripes = NR_STRIPES;
+	conf->max_nr_stripes = raid6_nr_stripes;
 
 	/* device size must be a multiple of chunk size */
 	mddev->size &= ~(mddev->chunk_size/1024 -1);
@@ -2139,5 +2139,6 @@ static void raid6_exit (void)
 
 module_init(raid6_init);
 module_exit(raid6_exit);
+module_param(raid6_nr_stripes, int, 0644);
 MODULE_LICENSE("GPL");
 MODULE_ALIAS("md-personality-8"); /* RAID6 */
