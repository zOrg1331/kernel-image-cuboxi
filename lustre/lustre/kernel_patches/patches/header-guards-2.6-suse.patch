Index: linux-2.6.4-30.1/include/linux/percpu_counter.h
===================================================================
--- linux-2.6.4-30.1.orig/include/linux/percpu_counter.h	2004-03-26 03:33:43.000000000 -0500
+++ linux-2.6.4-30.1/include/linux/percpu_counter.h	2004-04-02 02:09:30.000000000 -0500
@@ -3,6 +3,8 @@
  *
  * WARNING: these things are HUGE.  4 kbytes per counter on 32-way P4.
  */
+#ifndef _LINUX_PERCPU_COUNTER_H
+#define _LINUX_PERCPU_COUNTER_H
 
 #include <linux/config.h>
 #include <linux/spinlock.h>
@@ -101,3 +103,5 @@
 {
 	percpu_counter_mod(fbc, -1);
 }
+
+#endif /* _LINUX_PERCPU_COUNTER_H */
Index: linux-2.6.4-30.1/include/linux/blockgroup_lock.h
===================================================================
--- linux-2.6.4-30.1.orig/include/linux/blockgroup_lock.h	2004-03-26 03:33:43.000000000 -0500
+++ linux-2.6.4-30.1/include/linux/blockgroup_lock.h	2004-04-02 02:14:20.000000000 -0500
@@ -3,6 +3,8 @@
  *
  * Simple hashed spinlocking.
  */
+#ifndef _LINUX_BLOCKGROUP_LOCK_H
+#define _LINUX_BLOCKGROUP_LOCK_H
 
 #include <linux/config.h>
 #include <linux/spinlock.h>
@@ -55,4 +57,4 @@
 #define sb_bgl_lock(sb, block_group) \
 	(&(sb)->s_blockgroup_lock.locks[(block_group) & (NR_BG_LOCKS-1)].lock)
 
-
+#endif
