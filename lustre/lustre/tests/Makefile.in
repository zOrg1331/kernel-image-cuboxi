# Makefile.in generated by automake 1.7.9 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
ACLOCAL = @ACLOCAL@
AC_LUSTRE_CLIENT_URN = @AC_LUSTRE_CLIENT_URN@
AC_LUSTRE_CLI_VER_OFFSET_WARN = @AC_LUSTRE_CLI_VER_OFFSET_WARN@
AC_LUSTRE_FIX = @AC_LUSTRE_FIX@
AC_LUSTRE_LIB_VER_OFFSET_WARN = @AC_LUSTRE_LIB_VER_OFFSET_WARN@
AC_LUSTRE_MAJOR = @AC_LUSTRE_MAJOR@
AC_LUSTRE_MDS_URN = @AC_LUSTRE_MDS_URN@
AC_LUSTRE_MGS_URN = @AC_LUSTRE_MGS_URN@
AC_LUSTRE_MINOR = @AC_LUSTRE_MINOR@
AC_LUSTRE_OSS_URN = @AC_LUSTRE_OSS_URN@
AC_LUSTRE_PATCH = @AC_LUSTRE_PATCH@
AC_LUSTRE_VERSION_STRING = @AC_LUSTRE_VERSION_STRING@
AC_LUSTRE_VER_ALLOWED_OFFSET = @AC_LUSTRE_VER_ALLOWED_OFFSET@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
ARCH_UM = @ARCH_UM@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BACKINGFS = @BACKINGFS@
BLKID_FALSE = @BLKID_FALSE@
BLKID_TRUE = @BLKID_TRUE@
BUILD_CIBLND_FALSE = @BUILD_CIBLND_FALSE@
BUILD_CIBLND_TRUE = @BUILD_CIBLND_TRUE@
BUILD_GMLND_FALSE = @BUILD_GMLND_FALSE@
BUILD_GMLND_TRUE = @BUILD_GMLND_TRUE@
BUILD_IIBLND_FALSE = @BUILD_IIBLND_FALSE@
BUILD_IIBLND_TRUE = @BUILD_IIBLND_TRUE@
BUILD_MXLND_FALSE = @BUILD_MXLND_FALSE@
BUILD_MXLND_TRUE = @BUILD_MXLND_TRUE@
BUILD_O2IBLND_FALSE = @BUILD_O2IBLND_FALSE@
BUILD_O2IBLND_TRUE = @BUILD_O2IBLND_TRUE@
BUILD_OPENIBLND_FALSE = @BUILD_OPENIBLND_FALSE@
BUILD_OPENIBLND_TRUE = @BUILD_OPENIBLND_TRUE@
BUILD_PTLLND_FALSE = @BUILD_PTLLND_FALSE@
BUILD_PTLLND_TRUE = @BUILD_PTLLND_TRUE@
BUILD_QSWLND_FALSE = @BUILD_QSWLND_FALSE@
BUILD_QSWLND_TRUE = @BUILD_QSWLND_TRUE@
BUILD_RALND_FALSE = @BUILD_RALND_FALSE@
BUILD_RALND_TRUE = @BUILD_RALND_TRUE@
BUILD_UPTLLND_FALSE = @BUILD_UPTLLND_FALSE@
BUILD_UPTLLND_TRUE = @BUILD_UPTLLND_TRUE@
BUILD_USOCKLND_FALSE = @BUILD_USOCKLND_FALSE@
BUILD_USOCKLND_TRUE = @BUILD_USOCKLND_TRUE@
BUILD_VIBLND_FALSE = @BUILD_VIBLND_FALSE@
BUILD_VIBLND_TRUE = @BUILD_VIBLND_TRUE@
CAP_LIBS = @CAP_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CIBCPPFLAGS = @CIBCPPFLAGS@
CIBLND = @CIBLND@
CLIENT_FALSE = @CLIENT_FALSE@
CLIENT_TRUE = @CLIENT_TRUE@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CRAY_XT3_FALSE = @CRAY_XT3_FALSE@
CRAY_XT3_TRUE = @CRAY_XT3_TRUE@
CYGPATH_W = @CYGPATH_W@
DARWIN_FALSE = @DARWIN_FALSE@
DARWIN_TRUE = @DARWIN_TRUE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DMU_OSD_ENABLED_FALSE = @DMU_OSD_ENABLED_FALSE@
DMU_OSD_ENABLED_TRUE = @DMU_OSD_ENABLED_TRUE@
DMU_SRC = @DMU_SRC@
DOC_FALSE = @DOC_FALSE@
DOC_TRUE = @DOC_TRUE@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_DOC = @ENABLE_DOC@
ENABLE_INIT_SCRIPTS = @ENABLE_INIT_SCRIPTS@
ENABLE_LIBPTHREAD = @ENABLE_LIBPTHREAD@
EXEEXT = @EXEEXT@
EXT2FS_DEVEL_FALSE = @EXT2FS_DEVEL_FALSE@
EXT2FS_DEVEL_TRUE = @EXT2FS_DEVEL_TRUE@
EXTRA_KCFLAGS = @EXTRA_KCFLAGS@
EXTRA_KLDFLAGS = @EXTRA_KLDFLAGS@
EXTRA_KLIBS = @EXTRA_KLIBS@
EXTRA_LNET_INCLUDE = @EXTRA_LNET_INCLUDE@
GMCPPFLAGS = @GMCPPFLAGS@
GMLIBS = @GMLIBS@
GMLND = @GMLND@
IIBCPPFLAGS = @IIBCPPFLAGS@
IIBLND = @IIBLND@
INCLUDE_RULES = @INCLUDE_RULES@
INIT_SCRIPTS_FALSE = @INIT_SCRIPTS_FALSE@
INIT_SCRIPTS_TRUE = @INIT_SCRIPTS_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KDMU_FALSE = @KDMU_FALSE@
KDMU_TRUE = @KDMU_TRUE@
KMODEXT = @KMODEXT@
LDFLAGS = @LDFLAGS@
LDISKFS_DIR = @LDISKFS_DIR@
LDISKFS_ENABLED_FALSE = @LDISKFS_ENABLED_FALSE@
LDISKFS_ENABLED_TRUE = @LDISKFS_ENABLED_TRUE@
LDISKFS_SUBDIR = @LDISKFS_SUBDIR@
LIBCFS_INCLUDE_DIR = @LIBCFS_INCLUDE_DIR@
LIBCFS_SUBDIR = @LIBCFS_SUBDIR@
LIBEFENCE = @LIBEFENCE@
LIBLUSTRE_FALSE = @LIBLUSTRE_FALSE@
LIBLUSTRE_TESTS_FALSE = @LIBLUSTRE_TESTS_FALSE@
LIBLUSTRE_TESTS_TRUE = @LIBLUSTRE_TESTS_TRUE@
LIBLUSTRE_TRUE = @LIBLUSTRE_TRUE@
LIBOBJS = @LIBOBJS@
LIBPTHREAD_FALSE = @LIBPTHREAD_FALSE@
LIBPTHREAD_TRUE = @LIBPTHREAD_TRUE@
LIBREADLINE = @LIBREADLINE@
LIBS = @LIBS@
LIBSYSIO_SUBDIR = @LIBSYSIO_SUBDIR@
LIBWRAP = @LIBWRAP@
LINUX = @LINUX@
LINUX25_FALSE = @LINUX25_FALSE@
LINUX25_TRUE = @LINUX25_TRUE@
LINUXRELEASE = @LINUXRELEASE@
LINUX_CONFIG = @LINUX_CONFIG@
LINUX_FALSE = @LINUX_FALSE@
LINUX_OBJ = @LINUX_OBJ@
LINUX_TRUE = @LINUX_TRUE@
LLCFLAGS = @LLCFLAGS@
LLCPPFLAGS = @LLCPPFLAGS@
LTLIBOBJS = @LTLIBOBJS@
LUSTRE = @LUSTRE@
LUSTREIOKIT_SUBDIR = @LUSTREIOKIT_SUBDIR@
MAKEINFO = @MAKEINFO@
MODULES_FALSE = @MODULES_FALSE@
MODULES_TRUE = @MODULES_TRUE@
MODULE_TARGET = @MODULE_TARGET@
MOSTLYCLEANFILES = @MOSTLYCLEANFILES@
MPICC_WRAPPER = @MPICC_WRAPPER@
MPITESTS_FALSE = @MPITESTS_FALSE@
MPITESTS_TRUE = @MPITESTS_TRUE@
MXCPPFLAGS = @MXCPPFLAGS@
MXLIBS = @MXLIBS@
MXLND = @MXLND@
NET_SNMP_CFLAGS = @NET_SNMP_CFLAGS@
NET_SNMP_CONFIG = @NET_SNMP_CONFIG@
NET_SNMP_LIBS = @NET_SNMP_LIBS@
O2IBCPPFLAGS = @O2IBCPPFLAGS@
O2IBLND = @O2IBLND@
OBJEXT = @OBJEXT@
OPENIBCPPFLAGS = @OPENIBCPPFLAGS@
OPENIBLND = @OPENIBLND@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POSIX_OSD_ENABLED_FALSE = @POSIX_OSD_ENABLED_FALSE@
POSIX_OSD_ENABLED_TRUE = @POSIX_OSD_ENABLED_TRUE@
PTHREAD_LIBS = @PTHREAD_LIBS@
PTLLND = @PTLLND@
PTLLNDCPPFLAGS = @PTLLNDCPPFLAGS@
QSWCPPFLAGS = @QSWCPPFLAGS@
QSWLND = @QSWLND@
QUOTA_FALSE = @QUOTA_FALSE@
QUOTA_TRUE = @QUOTA_TRUE@
RACPPFLAGS = @RACPPFLAGS@
RALND = @RALND@
RANLIB = @RANLIB@
RELEASE = @RELEASE@
SERVER_FALSE = @SERVER_FALSE@
SERVER_TRUE = @SERVER_TRUE@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SNMP_DIST_SUBDIR = @SNMP_DIST_SUBDIR@
SNMP_SUBDIR = @SNMP_SUBDIR@
SPL_DIR = @SPL_DIR@
STRIP = @STRIP@
SUNOS_FALSE = @SUNOS_FALSE@
SUNOS_TRUE = @SUNOS_TRUE@
SYMVERFILE = @SYMVERFILE@
SYSIO = @SYSIO@
TESTS_FALSE = @TESTS_FALSE@
TESTS_TRUE = @TESTS_TRUE@
UML_CFLAGS = @UML_CFLAGS@
UPTLLND = @UPTLLND@
USE_QUILT_FALSE = @USE_QUILT_FALSE@
USE_QUILT_TRUE = @USE_QUILT_TRUE@
USOCKLND = @USOCKLND@
UTILS_FALSE = @UTILS_FALSE@
UTILS_TRUE = @UTILS_TRUE@
VERSION = @VERSION@
VIBCPPFLAGS = @VIBCPPFLAGS@
VIBLND = @VIBLND@
ZFS_DIR = @ZFS_DIR@
ZLIB = @ZLIB@
ac_configure_args = @ac_configure_args@
ac_ct_CC = @ac_ct_CC@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
agentdir = @agentdir@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
demodir = @demodir@
docdir = @docdir@
enable_uoss = @enable_uoss@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kextdir = @kextdir@
lb_target_os = @lb_target_os@
libdir = @libdir@
libexecdir = @libexecdir@
linux25 = @linux25@
localstatedir = @localstatedir@
macosdir = @macosdir@
mandir = @mandir@
mibdir = @mibdir@
moduledir = @moduledir@
modulefsdir = @modulefsdir@
modulenetdir = @modulenetdir@
oldincludedir = @oldincludedir@
pkgexampledir = @pkgexampledir@
plistdir = @plistdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
rootsbindir = @rootsbindir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
spl_src = @spl_src@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@

# Lustre test Makefile
AM_CPPFLAGS = $(LLCPPFLAGS) -I/opt/lam/include -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -DLUSTRE_UTILS
AM_CFLAGS = $(LLCFLAGS)

# LDADD = -lldap
# LDADD := -lreadline -ltermcap # -lefence
DIST_SUBDIRS := mpi

noinst_DATA = disk1_4.zip
noinst_SCRIPTS = leak_finder.pl llmount.sh llmountcleanup.sh functions.sh test-framework.sh runvmstat runiozone runtests sanity.sh rundbench acceptance-small.sh compile.sh conf-sanity.sh insanity.sh lfscktest.sh oos.sh oos2.sh llog-test.sh recovery-small.sh replay-dual.sh sanity-quota.sh replay-ost-single.sh replay-single.sh run-llog.sh sanityN.sh large-scale.sh runracer performance-sanity.sh mdsrate-create-small.sh mdsrate-create-large.sh mdsrate-lookup-1dir.sh mdsrate-lookup-10dirs.sh mdsrate-stat-small.sh mdsrate-stat-large.sh replay-vbr.sh lockorder.sh socketclient socketserver runmultiop_bg_pause recovery-mds-scale.sh run_dd.sh run_tar.sh run_iozone.sh run_dbench.sh run_IOR.sh recovery-double-scale.sh recovery-random-scale.sh parallel-scale.sh
nobase_noinst_SCRIPTS = cfg/local.sh acl/make-tree acl/run cfg/ncli.sh racer/dir_create.sh racer/file_create.sh racer/file_list.sh racer/file_rm.sh racer/racer.sh racer/file_concat.sh racer/file_link.sh racer/file_rename.sh racer/file_symlink.sh
nobase_noinst_DATA = acl/cp.test acl/getfacl-noacl.test acl/inheritance.test acl/misc.test acl/permissions.test acl/setfacl.test

EXTRA_DIST = $(noinst_SCRIPTS) $(noinst_DATA) \
             $(nobase_noinst_SCRIPTS) $(nobase_noinst_DATA)


@MPITESTS_TRUE@@TESTS_TRUE@SUBDIRS = mpi
@TESTS_TRUE@noinst_PROGRAMS = openunlink truncate directio writeme mlink utime it_test tchmod fsx test_brw  createmany chownmany statmany multifstat createtest opendirunlink opendevunlink unlinkmany checkstat statone runas openfile rmdirmany small_write multiop ll_sparseness_verify ll_sparseness_write mrename ll_dirstripe_verify mkdirmany openfilleddirunlink rename_many memhog iopentest1 iopentest2 mmap_sanity flock_test writemany reads flocks_test ll_getstripe_info
# noinst_PROGRAMS += copy_attr mkdirdeep 
@TESTS_TRUE@bin_PROGRAMS = mcreate munlink
@TESTS_TRUE@testdir = $(libdir)/lustre/tests
@TESTS_TRUE@test_SCRIPTS = $(noinst_SCRIPTS) $(noinst_PROGRAMS)
@TESTS_TRUE@nobase_test_SCRIPTS = $(nobase_noinst_SCRIPTS)
@TESTS_TRUE@test_DATA = $(noinst_DATA)
@TESTS_TRUE@nobase_test_DATA = $(nobase_noinst_DATA)

# mkdirdeep_LDADD=-L$(top_builddir)/lnet/utils -lptlctl $(LIBREADLINE)
mmap_sanity_SOURCES = mmap_sanity.c

LIBLUSTREAPI := $(top_builddir)/lustre/utils/liblustreapi.a
ll_getstripe_info_LDADD = $(LIBLUSTREAPI)
multiop_LDADD = $(LIBLUSTREAPI) -lrt

ll_dirstripe_verify_SOURCES = ll_dirstripe_verify.c
ll_dirstripe_verify_LDADD = -L$(top_builddir)/lustre/utils -llustreapi

flocks_test_SOURCES = flocks_test.c
flocks_test_LDADD = -lpthread
subdir = lustre/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
@TESTS_TRUE@bin_PROGRAMS = mcreate$(EXEEXT) munlink$(EXEEXT)
@TESTS_FALSE@bin_PROGRAMS =
@TESTS_TRUE@noinst_PROGRAMS = openunlink$(EXEEXT) truncate$(EXEEXT) \
@TESTS_TRUE@	directio$(EXEEXT) writeme$(EXEEXT) mlink$(EXEEXT) \
@TESTS_TRUE@	utime$(EXEEXT) it_test$(EXEEXT) tchmod$(EXEEXT) \
@TESTS_TRUE@	fsx$(EXEEXT) test_brw$(EXEEXT) createmany$(EXEEXT) \
@TESTS_TRUE@	chownmany$(EXEEXT) statmany$(EXEEXT) \
@TESTS_TRUE@	multifstat$(EXEEXT) createtest$(EXEEXT) \
@TESTS_TRUE@	opendirunlink$(EXEEXT) opendevunlink$(EXEEXT) \
@TESTS_TRUE@	unlinkmany$(EXEEXT) checkstat$(EXEEXT) \
@TESTS_TRUE@	statone$(EXEEXT) runas$(EXEEXT) openfile$(EXEEXT) \
@TESTS_TRUE@	rmdirmany$(EXEEXT) small_write$(EXEEXT) \
@TESTS_TRUE@	multiop$(EXEEXT) ll_sparseness_verify$(EXEEXT) \
@TESTS_TRUE@	ll_sparseness_write$(EXEEXT) mrename$(EXEEXT) \
@TESTS_TRUE@	ll_dirstripe_verify$(EXEEXT) mkdirmany$(EXEEXT) \
@TESTS_TRUE@	openfilleddirunlink$(EXEEXT) rename_many$(EXEEXT) \
@TESTS_TRUE@	memhog$(EXEEXT) iopentest1$(EXEEXT) \
@TESTS_TRUE@	iopentest2$(EXEEXT) mmap_sanity$(EXEEXT) \
@TESTS_TRUE@	flock_test$(EXEEXT) writemany$(EXEEXT) \
@TESTS_TRUE@	reads$(EXEEXT) flocks_test$(EXEEXT) \
@TESTS_TRUE@	ll_getstripe_info$(EXEEXT)
@TESTS_FALSE@noinst_PROGRAMS =
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)

checkstat_SOURCES = checkstat.c
checkstat_OBJECTS = checkstat.$(OBJEXT)
checkstat_LDADD = $(LDADD)
checkstat_DEPENDENCIES =
checkstat_LDFLAGS =
chownmany_SOURCES = chownmany.c
chownmany_OBJECTS = chownmany.$(OBJEXT)
chownmany_LDADD = $(LDADD)
chownmany_DEPENDENCIES =
chownmany_LDFLAGS =
createmany_SOURCES = createmany.c
createmany_OBJECTS = createmany.$(OBJEXT)
createmany_LDADD = $(LDADD)
createmany_DEPENDENCIES =
createmany_LDFLAGS =
createtest_SOURCES = createtest.c
createtest_OBJECTS = createtest.$(OBJEXT)
createtest_LDADD = $(LDADD)
createtest_DEPENDENCIES =
createtest_LDFLAGS =
directio_SOURCES = directio.c
directio_OBJECTS = directio.$(OBJEXT)
directio_LDADD = $(LDADD)
directio_DEPENDENCIES =
directio_LDFLAGS =
flock_test_SOURCES = flock_test.c
flock_test_OBJECTS = flock_test.$(OBJEXT)
flock_test_LDADD = $(LDADD)
flock_test_DEPENDENCIES =
flock_test_LDFLAGS =
am_flocks_test_OBJECTS = flocks_test.$(OBJEXT)
flocks_test_OBJECTS = $(am_flocks_test_OBJECTS)
flocks_test_DEPENDENCIES =
flocks_test_LDFLAGS =
fsx_SOURCES = fsx.c
fsx_OBJECTS = fsx.$(OBJEXT)
fsx_LDADD = $(LDADD)
fsx_DEPENDENCIES =
fsx_LDFLAGS =
iopentest1_SOURCES = iopentest1.c
iopentest1_OBJECTS = iopentest1.$(OBJEXT)
iopentest1_LDADD = $(LDADD)
iopentest1_DEPENDENCIES =
iopentest1_LDFLAGS =
iopentest2_SOURCES = iopentest2.c
iopentest2_OBJECTS = iopentest2.$(OBJEXT)
iopentest2_LDADD = $(LDADD)
iopentest2_DEPENDENCIES =
iopentest2_LDFLAGS =
it_test_SOURCES = it_test.c
it_test_OBJECTS = it_test.$(OBJEXT)
it_test_LDADD = $(LDADD)
it_test_DEPENDENCIES =
it_test_LDFLAGS =
am_ll_dirstripe_verify_OBJECTS = ll_dirstripe_verify.$(OBJEXT)
ll_dirstripe_verify_OBJECTS = $(am_ll_dirstripe_verify_OBJECTS)
ll_dirstripe_verify_DEPENDENCIES =
ll_dirstripe_verify_LDFLAGS =
ll_getstripe_info_SOURCES = ll_getstripe_info.c
ll_getstripe_info_OBJECTS = ll_getstripe_info.$(OBJEXT)
ll_getstripe_info_DEPENDENCIES = \
	$(top_builddir)/lustre/utils/liblustreapi.a
ll_getstripe_info_LDFLAGS =
ll_sparseness_verify_SOURCES = ll_sparseness_verify.c
ll_sparseness_verify_OBJECTS = ll_sparseness_verify.$(OBJEXT)
ll_sparseness_verify_LDADD = $(LDADD)
ll_sparseness_verify_DEPENDENCIES =
ll_sparseness_verify_LDFLAGS =
ll_sparseness_write_SOURCES = ll_sparseness_write.c
ll_sparseness_write_OBJECTS = ll_sparseness_write.$(OBJEXT)
ll_sparseness_write_LDADD = $(LDADD)
ll_sparseness_write_DEPENDENCIES =
ll_sparseness_write_LDFLAGS =
mcreate_SOURCES = mcreate.c
mcreate_OBJECTS = mcreate.$(OBJEXT)
mcreate_LDADD = $(LDADD)
mcreate_DEPENDENCIES =
mcreate_LDFLAGS =
memhog_SOURCES = memhog.c
memhog_OBJECTS = memhog.$(OBJEXT)
memhog_LDADD = $(LDADD)
memhog_DEPENDENCIES =
memhog_LDFLAGS =
mkdirmany_SOURCES = mkdirmany.c
mkdirmany_OBJECTS = mkdirmany.$(OBJEXT)
mkdirmany_LDADD = $(LDADD)
mkdirmany_DEPENDENCIES =
mkdirmany_LDFLAGS =
mlink_SOURCES = mlink.c
mlink_OBJECTS = mlink.$(OBJEXT)
mlink_LDADD = $(LDADD)
mlink_DEPENDENCIES =
mlink_LDFLAGS =
am_mmap_sanity_OBJECTS = mmap_sanity.$(OBJEXT)
mmap_sanity_OBJECTS = $(am_mmap_sanity_OBJECTS)
mmap_sanity_LDADD = $(LDADD)
mmap_sanity_DEPENDENCIES =
mmap_sanity_LDFLAGS =
mrename_SOURCES = mrename.c
mrename_OBJECTS = mrename.$(OBJEXT)
mrename_LDADD = $(LDADD)
mrename_DEPENDENCIES =
mrename_LDFLAGS =
multifstat_SOURCES = multifstat.c
multifstat_OBJECTS = multifstat.$(OBJEXT)
multifstat_LDADD = $(LDADD)
multifstat_DEPENDENCIES =
multifstat_LDFLAGS =
multiop_SOURCES = multiop.c
multiop_OBJECTS = multiop.$(OBJEXT)
multiop_DEPENDENCIES = $(top_builddir)/lustre/utils/liblustreapi.a
multiop_LDFLAGS =
munlink_SOURCES = munlink.c
munlink_OBJECTS = munlink.$(OBJEXT)
munlink_LDADD = $(LDADD)
munlink_DEPENDENCIES =
munlink_LDFLAGS =
opendevunlink_SOURCES = opendevunlink.c
opendevunlink_OBJECTS = opendevunlink.$(OBJEXT)
opendevunlink_LDADD = $(LDADD)
opendevunlink_DEPENDENCIES =
opendevunlink_LDFLAGS =
opendirunlink_SOURCES = opendirunlink.c
opendirunlink_OBJECTS = opendirunlink.$(OBJEXT)
opendirunlink_LDADD = $(LDADD)
opendirunlink_DEPENDENCIES =
opendirunlink_LDFLAGS =
openfile_SOURCES = openfile.c
openfile_OBJECTS = openfile.$(OBJEXT)
openfile_LDADD = $(LDADD)
openfile_DEPENDENCIES =
openfile_LDFLAGS =
openfilleddirunlink_SOURCES = openfilleddirunlink.c
openfilleddirunlink_OBJECTS = openfilleddirunlink.$(OBJEXT)
openfilleddirunlink_LDADD = $(LDADD)
openfilleddirunlink_DEPENDENCIES =
openfilleddirunlink_LDFLAGS =
openunlink_SOURCES = openunlink.c
openunlink_OBJECTS = openunlink.$(OBJEXT)
openunlink_LDADD = $(LDADD)
openunlink_DEPENDENCIES =
openunlink_LDFLAGS =
reads_SOURCES = reads.c
reads_OBJECTS = reads.$(OBJEXT)
reads_LDADD = $(LDADD)
reads_DEPENDENCIES =
reads_LDFLAGS =
rename_many_SOURCES = rename_many.c
rename_many_OBJECTS = rename_many.$(OBJEXT)
rename_many_LDADD = $(LDADD)
rename_many_DEPENDENCIES =
rename_many_LDFLAGS =
rmdirmany_SOURCES = rmdirmany.c
rmdirmany_OBJECTS = rmdirmany.$(OBJEXT)
rmdirmany_LDADD = $(LDADD)
rmdirmany_DEPENDENCIES =
rmdirmany_LDFLAGS =
runas_SOURCES = runas.c
runas_OBJECTS = runas.$(OBJEXT)
runas_LDADD = $(LDADD)
runas_DEPENDENCIES =
runas_LDFLAGS =
small_write_SOURCES = small_write.c
small_write_OBJECTS = small_write.$(OBJEXT)
small_write_LDADD = $(LDADD)
small_write_DEPENDENCIES =
small_write_LDFLAGS =
statmany_SOURCES = statmany.c
statmany_OBJECTS = statmany.$(OBJEXT)
statmany_LDADD = $(LDADD)
statmany_DEPENDENCIES =
statmany_LDFLAGS =
statone_SOURCES = statone.c
statone_OBJECTS = statone.$(OBJEXT)
statone_LDADD = $(LDADD)
statone_DEPENDENCIES =
statone_LDFLAGS =
tchmod_SOURCES = tchmod.c
tchmod_OBJECTS = tchmod.$(OBJEXT)
tchmod_LDADD = $(LDADD)
tchmod_DEPENDENCIES =
tchmod_LDFLAGS =
test_brw_SOURCES = test_brw.c
test_brw_OBJECTS = test_brw.$(OBJEXT)
test_brw_LDADD = $(LDADD)
test_brw_DEPENDENCIES =
test_brw_LDFLAGS =
truncate_SOURCES = truncate.c
truncate_OBJECTS = truncate.$(OBJEXT)
truncate_LDADD = $(LDADD)
truncate_DEPENDENCIES =
truncate_LDFLAGS =
unlinkmany_SOURCES = unlinkmany.c
unlinkmany_OBJECTS = unlinkmany.$(OBJEXT)
unlinkmany_LDADD = $(LDADD)
unlinkmany_DEPENDENCIES =
unlinkmany_LDFLAGS =
utime_SOURCES = utime.c
utime_OBJECTS = utime.$(OBJEXT)
utime_LDADD = $(LDADD)
utime_DEPENDENCIES =
utime_LDFLAGS =
writemany_SOURCES = writemany.c
writemany_OBJECTS = writemany.$(OBJEXT)
writemany_LDADD = $(LDADD)
writemany_DEPENDENCIES =
writemany_LDFLAGS =
writeme_SOURCES = writeme.c
writeme_OBJECTS = writeme.$(OBJEXT)
writeme_LDADD = $(LDADD)
writeme_DEPENDENCIES =
writeme_LDFLAGS =
SCRIPTS = $(nobase_noinst_SCRIPTS) $(nobase_test_SCRIPTS) \
	$(noinst_SCRIPTS) $(test_SCRIPTS)


DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/checkstat.Po \
@AMDEP_TRUE@	./$(DEPDIR)/chownmany.Po ./$(DEPDIR)/createmany.Po \
@AMDEP_TRUE@	./$(DEPDIR)/createtest.Po ./$(DEPDIR)/directio.Po \
@AMDEP_TRUE@	./$(DEPDIR)/flock_test.Po \
@AMDEP_TRUE@	./$(DEPDIR)/flocks_test.Po ./$(DEPDIR)/fsx.Po \
@AMDEP_TRUE@	./$(DEPDIR)/iopentest1.Po ./$(DEPDIR)/iopentest2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/it_test.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ll_dirstripe_verify.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ll_getstripe_info.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ll_sparseness_verify.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ll_sparseness_write.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mcreate.Po ./$(DEPDIR)/memhog.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mkdirmany.Po ./$(DEPDIR)/mlink.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mmap_sanity.Po ./$(DEPDIR)/mrename.Po \
@AMDEP_TRUE@	./$(DEPDIR)/multifstat.Po ./$(DEPDIR)/multiop.Po \
@AMDEP_TRUE@	./$(DEPDIR)/munlink.Po ./$(DEPDIR)/opendevunlink.Po \
@AMDEP_TRUE@	./$(DEPDIR)/opendirunlink.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openfile.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openfilleddirunlink.Po \
@AMDEP_TRUE@	./$(DEPDIR)/openunlink.Po ./$(DEPDIR)/reads.Po \
@AMDEP_TRUE@	./$(DEPDIR)/rename_many.Po ./$(DEPDIR)/rmdirmany.Po \
@AMDEP_TRUE@	./$(DEPDIR)/runas.Po ./$(DEPDIR)/small_write.Po \
@AMDEP_TRUE@	./$(DEPDIR)/statmany.Po ./$(DEPDIR)/statone.Po \
@AMDEP_TRUE@	./$(DEPDIR)/tchmod.Po ./$(DEPDIR)/test_brw.Po \
@AMDEP_TRUE@	./$(DEPDIR)/truncate.Po ./$(DEPDIR)/unlinkmany.Po \
@AMDEP_TRUE@	./$(DEPDIR)/utime.Po ./$(DEPDIR)/writemany.Po \
@AMDEP_TRUE@	./$(DEPDIR)/writeme.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = checkstat.c chownmany.c createmany.c createtest.c \
	directio.c flock_test.c $(flocks_test_SOURCES) fsx.c \
	iopentest1.c iopentest2.c it_test.c \
	$(ll_dirstripe_verify_SOURCES) ll_getstripe_info.c \
	ll_sparseness_verify.c ll_sparseness_write.c mcreate.c memhog.c \
	mkdirmany.c mlink.c $(mmap_sanity_SOURCES) mrename.c \
	multifstat.c multiop.c munlink.c opendevunlink.c \
	opendirunlink.c openfile.c openfilleddirunlink.c openunlink.c \
	reads.c rename_many.c rmdirmany.c runas.c small_write.c \
	statmany.c statone.c tchmod.c test_brw.c truncate.c \
	unlinkmany.c utime.c writemany.c writeme.c
DATA = $(nobase_noinst_DATA) $(nobase_test_DATA) $(noinst_DATA) \
	$(test_DATA)


RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive
DIST_COMMON = README $(srcdir)/Makefile.in Makefile.am
SOURCES = checkstat.c chownmany.c createmany.c createtest.c directio.c flock_test.c $(flocks_test_SOURCES) fsx.c iopentest1.c iopentest2.c it_test.c $(ll_dirstripe_verify_SOURCES) ll_getstripe_info.c ll_sparseness_verify.c ll_sparseness_write.c mcreate.c memhog.c mkdirmany.c mlink.c $(mmap_sanity_SOURCES) mrename.c multifstat.c multiop.c munlink.c opendevunlink.c opendirunlink.c openfile.c openfilleddirunlink.c openunlink.c reads.c rename_many.c rmdirmany.c runas.c small_write.c statmany.c statone.c tchmod.c test_brw.c truncate.c unlinkmany.c utime.c writemany.c writeme.c

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  lustre/tests/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
checkstat$(EXEEXT): $(checkstat_OBJECTS) $(checkstat_DEPENDENCIES) 
	@rm -f checkstat$(EXEEXT)
	$(LINK) $(checkstat_LDFLAGS) $(checkstat_OBJECTS) $(checkstat_LDADD) $(LIBS)
chownmany$(EXEEXT): $(chownmany_OBJECTS) $(chownmany_DEPENDENCIES) 
	@rm -f chownmany$(EXEEXT)
	$(LINK) $(chownmany_LDFLAGS) $(chownmany_OBJECTS) $(chownmany_LDADD) $(LIBS)
createmany$(EXEEXT): $(createmany_OBJECTS) $(createmany_DEPENDENCIES) 
	@rm -f createmany$(EXEEXT)
	$(LINK) $(createmany_LDFLAGS) $(createmany_OBJECTS) $(createmany_LDADD) $(LIBS)
createtest$(EXEEXT): $(createtest_OBJECTS) $(createtest_DEPENDENCIES) 
	@rm -f createtest$(EXEEXT)
	$(LINK) $(createtest_LDFLAGS) $(createtest_OBJECTS) $(createtest_LDADD) $(LIBS)
directio$(EXEEXT): $(directio_OBJECTS) $(directio_DEPENDENCIES) 
	@rm -f directio$(EXEEXT)
	$(LINK) $(directio_LDFLAGS) $(directio_OBJECTS) $(directio_LDADD) $(LIBS)
flock_test$(EXEEXT): $(flock_test_OBJECTS) $(flock_test_DEPENDENCIES) 
	@rm -f flock_test$(EXEEXT)
	$(LINK) $(flock_test_LDFLAGS) $(flock_test_OBJECTS) $(flock_test_LDADD) $(LIBS)
flocks_test$(EXEEXT): $(flocks_test_OBJECTS) $(flocks_test_DEPENDENCIES) 
	@rm -f flocks_test$(EXEEXT)
	$(LINK) $(flocks_test_LDFLAGS) $(flocks_test_OBJECTS) $(flocks_test_LDADD) $(LIBS)
fsx$(EXEEXT): $(fsx_OBJECTS) $(fsx_DEPENDENCIES) 
	@rm -f fsx$(EXEEXT)
	$(LINK) $(fsx_LDFLAGS) $(fsx_OBJECTS) $(fsx_LDADD) $(LIBS)
iopentest1$(EXEEXT): $(iopentest1_OBJECTS) $(iopentest1_DEPENDENCIES) 
	@rm -f iopentest1$(EXEEXT)
	$(LINK) $(iopentest1_LDFLAGS) $(iopentest1_OBJECTS) $(iopentest1_LDADD) $(LIBS)
iopentest2$(EXEEXT): $(iopentest2_OBJECTS) $(iopentest2_DEPENDENCIES) 
	@rm -f iopentest2$(EXEEXT)
	$(LINK) $(iopentest2_LDFLAGS) $(iopentest2_OBJECTS) $(iopentest2_LDADD) $(LIBS)
it_test$(EXEEXT): $(it_test_OBJECTS) $(it_test_DEPENDENCIES) 
	@rm -f it_test$(EXEEXT)
	$(LINK) $(it_test_LDFLAGS) $(it_test_OBJECTS) $(it_test_LDADD) $(LIBS)
ll_dirstripe_verify$(EXEEXT): $(ll_dirstripe_verify_OBJECTS) $(ll_dirstripe_verify_DEPENDENCIES) 
	@rm -f ll_dirstripe_verify$(EXEEXT)
	$(LINK) $(ll_dirstripe_verify_LDFLAGS) $(ll_dirstripe_verify_OBJECTS) $(ll_dirstripe_verify_LDADD) $(LIBS)
ll_getstripe_info$(EXEEXT): $(ll_getstripe_info_OBJECTS) $(ll_getstripe_info_DEPENDENCIES) 
	@rm -f ll_getstripe_info$(EXEEXT)
	$(LINK) $(ll_getstripe_info_LDFLAGS) $(ll_getstripe_info_OBJECTS) $(ll_getstripe_info_LDADD) $(LIBS)
ll_sparseness_verify$(EXEEXT): $(ll_sparseness_verify_OBJECTS) $(ll_sparseness_verify_DEPENDENCIES) 
	@rm -f ll_sparseness_verify$(EXEEXT)
	$(LINK) $(ll_sparseness_verify_LDFLAGS) $(ll_sparseness_verify_OBJECTS) $(ll_sparseness_verify_LDADD) $(LIBS)
ll_sparseness_write$(EXEEXT): $(ll_sparseness_write_OBJECTS) $(ll_sparseness_write_DEPENDENCIES) 
	@rm -f ll_sparseness_write$(EXEEXT)
	$(LINK) $(ll_sparseness_write_LDFLAGS) $(ll_sparseness_write_OBJECTS) $(ll_sparseness_write_LDADD) $(LIBS)
mcreate$(EXEEXT): $(mcreate_OBJECTS) $(mcreate_DEPENDENCIES) 
	@rm -f mcreate$(EXEEXT)
	$(LINK) $(mcreate_LDFLAGS) $(mcreate_OBJECTS) $(mcreate_LDADD) $(LIBS)
memhog$(EXEEXT): $(memhog_OBJECTS) $(memhog_DEPENDENCIES) 
	@rm -f memhog$(EXEEXT)
	$(LINK) $(memhog_LDFLAGS) $(memhog_OBJECTS) $(memhog_LDADD) $(LIBS)
mkdirmany$(EXEEXT): $(mkdirmany_OBJECTS) $(mkdirmany_DEPENDENCIES) 
	@rm -f mkdirmany$(EXEEXT)
	$(LINK) $(mkdirmany_LDFLAGS) $(mkdirmany_OBJECTS) $(mkdirmany_LDADD) $(LIBS)
mlink$(EXEEXT): $(mlink_OBJECTS) $(mlink_DEPENDENCIES) 
	@rm -f mlink$(EXEEXT)
	$(LINK) $(mlink_LDFLAGS) $(mlink_OBJECTS) $(mlink_LDADD) $(LIBS)
mmap_sanity$(EXEEXT): $(mmap_sanity_OBJECTS) $(mmap_sanity_DEPENDENCIES) 
	@rm -f mmap_sanity$(EXEEXT)
	$(LINK) $(mmap_sanity_LDFLAGS) $(mmap_sanity_OBJECTS) $(mmap_sanity_LDADD) $(LIBS)
mrename$(EXEEXT): $(mrename_OBJECTS) $(mrename_DEPENDENCIES) 
	@rm -f mrename$(EXEEXT)
	$(LINK) $(mrename_LDFLAGS) $(mrename_OBJECTS) $(mrename_LDADD) $(LIBS)
multifstat$(EXEEXT): $(multifstat_OBJECTS) $(multifstat_DEPENDENCIES) 
	@rm -f multifstat$(EXEEXT)
	$(LINK) $(multifstat_LDFLAGS) $(multifstat_OBJECTS) $(multifstat_LDADD) $(LIBS)
multiop$(EXEEXT): $(multiop_OBJECTS) $(multiop_DEPENDENCIES) 
	@rm -f multiop$(EXEEXT)
	$(LINK) $(multiop_LDFLAGS) $(multiop_OBJECTS) $(multiop_LDADD) $(LIBS)
munlink$(EXEEXT): $(munlink_OBJECTS) $(munlink_DEPENDENCIES) 
	@rm -f munlink$(EXEEXT)
	$(LINK) $(munlink_LDFLAGS) $(munlink_OBJECTS) $(munlink_LDADD) $(LIBS)
opendevunlink$(EXEEXT): $(opendevunlink_OBJECTS) $(opendevunlink_DEPENDENCIES) 
	@rm -f opendevunlink$(EXEEXT)
	$(LINK) $(opendevunlink_LDFLAGS) $(opendevunlink_OBJECTS) $(opendevunlink_LDADD) $(LIBS)
opendirunlink$(EXEEXT): $(opendirunlink_OBJECTS) $(opendirunlink_DEPENDENCIES) 
	@rm -f opendirunlink$(EXEEXT)
	$(LINK) $(opendirunlink_LDFLAGS) $(opendirunlink_OBJECTS) $(opendirunlink_LDADD) $(LIBS)
openfile$(EXEEXT): $(openfile_OBJECTS) $(openfile_DEPENDENCIES) 
	@rm -f openfile$(EXEEXT)
	$(LINK) $(openfile_LDFLAGS) $(openfile_OBJECTS) $(openfile_LDADD) $(LIBS)
openfilleddirunlink$(EXEEXT): $(openfilleddirunlink_OBJECTS) $(openfilleddirunlink_DEPENDENCIES) 
	@rm -f openfilleddirunlink$(EXEEXT)
	$(LINK) $(openfilleddirunlink_LDFLAGS) $(openfilleddirunlink_OBJECTS) $(openfilleddirunlink_LDADD) $(LIBS)
openunlink$(EXEEXT): $(openunlink_OBJECTS) $(openunlink_DEPENDENCIES) 
	@rm -f openunlink$(EXEEXT)
	$(LINK) $(openunlink_LDFLAGS) $(openunlink_OBJECTS) $(openunlink_LDADD) $(LIBS)
reads$(EXEEXT): $(reads_OBJECTS) $(reads_DEPENDENCIES) 
	@rm -f reads$(EXEEXT)
	$(LINK) $(reads_LDFLAGS) $(reads_OBJECTS) $(reads_LDADD) $(LIBS)
rename_many$(EXEEXT): $(rename_many_OBJECTS) $(rename_many_DEPENDENCIES) 
	@rm -f rename_many$(EXEEXT)
	$(LINK) $(rename_many_LDFLAGS) $(rename_many_OBJECTS) $(rename_many_LDADD) $(LIBS)
rmdirmany$(EXEEXT): $(rmdirmany_OBJECTS) $(rmdirmany_DEPENDENCIES) 
	@rm -f rmdirmany$(EXEEXT)
	$(LINK) $(rmdirmany_LDFLAGS) $(rmdirmany_OBJECTS) $(rmdirmany_LDADD) $(LIBS)
runas$(EXEEXT): $(runas_OBJECTS) $(runas_DEPENDENCIES) 
	@rm -f runas$(EXEEXT)
	$(LINK) $(runas_LDFLAGS) $(runas_OBJECTS) $(runas_LDADD) $(LIBS)
small_write$(EXEEXT): $(small_write_OBJECTS) $(small_write_DEPENDENCIES) 
	@rm -f small_write$(EXEEXT)
	$(LINK) $(small_write_LDFLAGS) $(small_write_OBJECTS) $(small_write_LDADD) $(LIBS)
statmany$(EXEEXT): $(statmany_OBJECTS) $(statmany_DEPENDENCIES) 
	@rm -f statmany$(EXEEXT)
	$(LINK) $(statmany_LDFLAGS) $(statmany_OBJECTS) $(statmany_LDADD) $(LIBS)
statone$(EXEEXT): $(statone_OBJECTS) $(statone_DEPENDENCIES) 
	@rm -f statone$(EXEEXT)
	$(LINK) $(statone_LDFLAGS) $(statone_OBJECTS) $(statone_LDADD) $(LIBS)
tchmod$(EXEEXT): $(tchmod_OBJECTS) $(tchmod_DEPENDENCIES) 
	@rm -f tchmod$(EXEEXT)
	$(LINK) $(tchmod_LDFLAGS) $(tchmod_OBJECTS) $(tchmod_LDADD) $(LIBS)
test_brw$(EXEEXT): $(test_brw_OBJECTS) $(test_brw_DEPENDENCIES) 
	@rm -f test_brw$(EXEEXT)
	$(LINK) $(test_brw_LDFLAGS) $(test_brw_OBJECTS) $(test_brw_LDADD) $(LIBS)
truncate$(EXEEXT): $(truncate_OBJECTS) $(truncate_DEPENDENCIES) 
	@rm -f truncate$(EXEEXT)
	$(LINK) $(truncate_LDFLAGS) $(truncate_OBJECTS) $(truncate_LDADD) $(LIBS)
unlinkmany$(EXEEXT): $(unlinkmany_OBJECTS) $(unlinkmany_DEPENDENCIES) 
	@rm -f unlinkmany$(EXEEXT)
	$(LINK) $(unlinkmany_LDFLAGS) $(unlinkmany_OBJECTS) $(unlinkmany_LDADD) $(LIBS)
utime$(EXEEXT): $(utime_OBJECTS) $(utime_DEPENDENCIES) 
	@rm -f utime$(EXEEXT)
	$(LINK) $(utime_LDFLAGS) $(utime_OBJECTS) $(utime_LDADD) $(LIBS)
writemany$(EXEEXT): $(writemany_OBJECTS) $(writemany_DEPENDENCIES) 
	@rm -f writemany$(EXEEXT)
	$(LINK) $(writemany_LDFLAGS) $(writemany_OBJECTS) $(writemany_LDADD) $(LIBS)
writeme$(EXEEXT): $(writeme_OBJECTS) $(writeme_DEPENDENCIES) 
	@rm -f writeme$(EXEEXT)
	$(LINK) $(writeme_LDFLAGS) $(writeme_OBJECTS) $(writeme_LDADD) $(LIBS)
nobase_testSCRIPT_INSTALL = $(install_sh_SCRIPT)
install-nobase_testSCRIPTS: $(nobase_test_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(testdir)
	@list='$(nobase_test_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    f=`echo "$$p" | sed 's|[^/]*$$||'`"$$f"; \
	    echo " $(nobase_testSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(testdir)/$$f"; \
	    $(nobase_testSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(testdir)/$$f; \
	  else :; fi; \
	done

uninstall-nobase_testSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_test_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  f=`echo "$$p" | sed 's|[^/]*$$||'`"$$f"; \
	  echo " rm -f $(DESTDIR)$(testdir)/$$f"; \
	  rm -f $(DESTDIR)$(testdir)/$$f; \
	done
testSCRIPT_INSTALL = $(INSTALL_SCRIPT)
install-testSCRIPTS: $(test_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(testdir)
	@list='$(test_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(testSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(testdir)/$$f"; \
	    $(testSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(testdir)/$$f; \
	  else :; fi; \
	done

uninstall-testSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(test_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f $(DESTDIR)$(testdir)/$$f"; \
	  rm -f $(DESTDIR)$(testdir)/$$f; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/checkstat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chownmany.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/createmany.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/createtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/directio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flock_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flocks_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fsx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iopentest1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iopentest2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/it_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ll_dirstripe_verify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ll_getstripe_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ll_sparseness_verify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ll_sparseness_write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mcreate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memhog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mkdirmany.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mlink.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mmap_sanity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mrename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multifstat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multiop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/munlink.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opendevunlink.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opendirunlink.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openfilleddirunlink.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openunlink.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rename_many.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rmdirmany.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/runas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/small_write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statmany.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statone.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tchmod.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_brw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/truncate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unlinkmany.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utime.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/writemany.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/writeme.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:
nobase_testDATA_INSTALL = $(install_sh_DATA)
install-nobase_testDATA: $(nobase_test_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(testdir)
	@list='$(nobase_test_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="$$p"; \
	  echo " $(nobase_testDATA_INSTALL) $$d$$p $(DESTDIR)$(testdir)/$$f"; \
	  $(nobase_testDATA_INSTALL) $$d$$p $(DESTDIR)$(testdir)/$$f; \
	done

uninstall-nobase_testDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_test_DATA)'; for p in $$list; do \
	  f="$$p"; \
	  echo " rm -f $(DESTDIR)$(testdir)/$$f"; \
	  rm -f $(DESTDIR)$(testdir)/$$f; \
	done
testDATA_INSTALL = $(INSTALL_DATA)
install-testDATA: $(test_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(testdir)
	@list='$(test_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(testDATA_INSTALL) $$d$$p $(DESTDIR)$(testdir)/$$f"; \
	  $(testDATA_INSTALL) $$d$$p $(DESTDIR)$(testdir)/$$f; \
	done

uninstall-testDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(test_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(testdir)/$$f"; \
	  rm -f $(DESTDIR)$(testdir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/acl $(distdir)/cfg $(distdir)/racer
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(testdir) $(DESTDIR)$(testdir) $(DESTDIR)$(testdir) $(DESTDIR)$(testdir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-nobase_testDATA install-nobase_testSCRIPTS \
	install-testDATA install-testSCRIPTS

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-nobase_testDATA uninstall-nobase_testSCRIPTS \
	uninstall-testDATA uninstall-testSCRIPTS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-binPROGRAMS \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive install-man \
	install-nobase_testDATA install-nobase_testSCRIPTS \
	install-recursive install-strip install-testDATA \
	install-testSCRIPTS installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-recursive \
	pdf pdf-am pdf-recursive ps ps-am ps-recursive tags \
	tags-recursive uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-info-recursive \
	uninstall-nobase_testDATA uninstall-nobase_testSCRIPTS \
	uninstall-recursive uninstall-testDATA uninstall-testSCRIPTS


#copy_attr_LDADD= -lattr
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
