SUBDIRS := @LDISKFS_SUBDIR@ . @LIBSYSIO_SUBDIR@ @SNMP_SUBDIR@ @LUSTREIOKIT_SUBDIR@ @LIBCFS_SUBDIR@ lnet lustre
DIST_SUBDIRS := @SNMP_DIST_SUBDIR@ libsysio ldiskfs @LUSTREIOKIT_SUBDIR@ @LIBCFS_SUBDIR@ lnet lustre 
SOURCES_SUBDIRS := @LDISKFS_SUBDIR@ @LIBCFS_SUBDIR@ lnet lustre
RPM_SUBDIRS := @LDISKFS_SUBDIR@ @LUSTREIOKIT_SUBDIR@
if LDISKFS_ENABLED
EXTRA_SOURCES := @SYMVERFILE@
endif

include build/autoMakefile.am.toplevel

EXTRA_DIST += config.h.in

if LDISKFS_ENABLED
@SYMVERFILE@: @LDISKFS_DIR@/@SYMVERFILE@
	touch @SYMVERFILE@
	-grep -v ldiskfs @SYMVERFILE@ > @SYMVERFILE@.old
	cat @SYMVERFILE@.old @LDISKFS_DIR@/@SYMVERFILE@ > @SYMVERFILE@
endif

CSTK=/tmp/checkstack
CSTKO=/tmp/checkstack.orig

checkstack:
	[ -f ${CSTK} -a ! -s ${CSTKO} ] && mv -f ${CSTK} ${CSTKO} || true
	{ for i in lustre/* lnet/* libcfs/*; do					     \
		MOD=$$i/`basename $$i`;					     \
		if [ $$i = "lustre/llite" ]; then MOD=$$i/lustre; fi;        \
		[ -f $$MOD.ko ] && MOD=$$MOD.ko || MOD=$$MOD.o;		     \
		[ -f $$MOD ] && objdump -d $$MOD | perl build/checkstack.pl; \
	  done;								     \
	  for i in lnet/klnds/*; do					     \
		MOD=$$i/k`basename $$i`;				     \
		[ -f $$MOD.ko ] && MOD=$$MOD.ko || MOD=$$MOD.o;		     \
		[ -f $$MOD ] && objdump -d $$MOD | perl build/checkstack.pl; \
	  done } | sort -nr > ${CSTK}
	[ -f ${CSTKO} ] && ! diff -u ${CSTKO} ${CSTK} || head -30 ${CSTK}

checkstack-update:
	[ -f ${CSTK} ] && mv -f ${CSTK} ${CSTKO}

checkstack-clean:
	rm -f ${CSTK} ${CSTKO}

module-dist-hook:
	if [ -d CVS -o -d .git ]; then \
	    perl lustre/scripts/tree_status.pl > $(distdir)/tree_status; \
	fi
