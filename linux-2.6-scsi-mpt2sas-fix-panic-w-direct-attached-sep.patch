From: Jarod Wilson <jarod@redhat.com>
Date: Thu, 28 Oct 2010 18:55:09 -0400
Subject: [scsi] mpt2sas: fix panic w/direct attached SEP
Message-id: <20101028185509.GB29155@redhat.com>
Patchwork-id: 28972
O-Subject: [RHEL5 PATCH] mpt2sas: fix panic w/direct attached SEP
Bugzilla: 641086
RH-Acked-by: Rob Evers <revers@redhat.com>

Bugzilla #641086: mpt2sas driver update causes boot failure with Dell PERC
H200 SAS HBA

Patch from Kashyap Desai at LSI, posted on behalf of thenzl (who is out of
the office today) for the sake of expediency.

    Fix oops loading driver when there is direct attached SEP device

    The driver set max phys count to the value reported in sas iounit page
    zero.  However this page doesn't take into account additional virutal
    phys.  When sas topology event arrives, the phy count is larger than
    expected, and the driver accesses memory array beyond the end of
    allocated space, then oops.  Manufacturing page 8 contains the info
    on direct attached phys.

    For this fix will making sure that sas topology event is not
    processing phys greater than the expected phy count

Patch has been tested and verified to fix the issue w/numerous Dell boxes
in our own lab, by nstraz.


diff --git a/drivers/scsi/mpt2sas/mpt2sas_scsih.c b/drivers/scsi/mpt2sas/mpt2sas_scsih.c
index 6d1bf49..2fd0be5 100644
--- a/drivers/scsi/mpt2sas/mpt2sas_scsih.c
+++ b/drivers/scsi/mpt2sas/mpt2sas_scsih.c
@@ -4678,7 +4678,7 @@ _scsih_sas_topology_change_event(struct MPT2SAS_ADAPTER *ioc,
 	int i;
 	u16 parent_handle, handle;
 	u16 reason_code;
-	u8 phy_number;
+	u8 phy_number, max_phys;
 	struct _sas_node *sas_expander;
 	struct _sas_device *sas_device;
 	u64 sas_address;
@@ -4716,11 +4716,13 @@ _scsih_sas_topology_change_event(struct MPT2SAS_ADAPTER *ioc,
 	sas_expander = mpt2sas_scsih_expander_find_by_handle(ioc,
 	    parent_handle);
 	spin_unlock_irqrestore(&ioc->sas_node_lock, flags);
-	if (sas_expander)
+	if (sas_expander) {
 		sas_address = sas_expander->sas_address;
-	else if (parent_handle < ioc->sas_hba.num_phys)
+		max_phys = sas_expander->num_phys;
+	} else if (parent_handle < ioc->sas_hba.num_phys) {
 		sas_address = ioc->sas_hba.sas_address;
-	else
+		max_phys = ioc->sas_hba.num_phys;
+	} else
 		return;
 
 	/* handle siblings events */
@@ -4734,6 +4736,8 @@ _scsih_sas_topology_change_event(struct MPT2SAS_ADAPTER *ioc,
 		    ioc->pci_error_recovery)
 			return;
 		phy_number = event_data->StartPhyNum + i;
+		if (phy_number >= max_phys)
+			continue;
 		reason_code = event_data->PHY[i].PhyStatus &
 		    MPI2_EVENT_SAS_TOPO_RC_MASK;
 		if ((event_data->PHY[i].PhyStatus &
