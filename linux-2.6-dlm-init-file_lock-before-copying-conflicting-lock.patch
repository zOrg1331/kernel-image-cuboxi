From: Jeff Layton <jlayton@redhat.com>
Date: Wed, 28 Jan 2009 12:53:25 -0500
Subject: [dlm] init file_lock before copying conflicting lock
Message-id: 1233165206-31117-3-git-send-email-jlayton@redhat.com
O-Subject: [RHEL5.4 PATCH 2/3] BZ#479323: dlm: initialize file_lock struct in GETLK before copying conflicting lock
Bugzilla: 479323
RH-Acked-by: John Feeney <jfeeney@redhat.com>
RH-Acked-by: Peter Staubach <staubach@redhat.com>

dlm_posix_get fills out the relevant fields in the file_lock before
returning when there is a lock conflict, but doesn't clean out any of
the other fields in the file_lock.

When nfsd does a NFSv4 lockt call, it sets the fl_lmops to
nfsd_posix_mng_ops before calling the lower fs. When the lock comes back
after testing a lock on GFS2, it still has that field set. This confuses
nfsd into thinking that the file_lock is a nfsd4 lock.

Fix this by making DLM reinitialize the file_lock before copying the
fields from the conflicting lock.

Signed-off-by: Jeff Layton <jlayton@redhat.com>

diff --git a/fs/dlm/plock.c b/fs/dlm/plock.c
index e929c1b..5635bd4 100644
--- a/fs/dlm/plock.c
+++ b/fs/dlm/plock.c
@@ -307,7 +307,9 @@ int dlm_posix_get(dlm_lockspace_t *lockspace, u64 number, struct file *file,
 	if (rv == -ENOENT)
 		rv = 0;
 	else if (rv > 0) {
+		locks_init_lock(fl);
 		fl->fl_type = (op->info.ex) ? F_WRLCK : F_RDLCK;
+		fl->fl_flags = FL_POSIX;
 		fl->fl_pid = op->info.pid;
 		fl->fl_start = op->info.start;
 		fl->fl_end = op->info.end;
