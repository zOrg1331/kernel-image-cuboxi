From: Hendrik Brueckner <brueckner@redhat.com>
Date: Thu, 29 Apr 2010 15:55:48 -0400
Subject: [s390] zcore: fix reipl device detection
Message-id: <20100429155547.GB19588@redhat.com>
Patchwork-id: 24697
O-Subject: [RHEL5.6 PATCH 1/1] [s390] zcore: Fix reipl device detection
Bugzilla: 587027
RH-Acked-by: Pete Zaitcev <zaitcev@redhat.com>
RH-Acked-by: John Feeney <jfeeney@redhat.com>

Description
-----------
zfcpdump fails and no kernel dump is created:
The reipl device information is passed from the kernel to zfcpdump
using a pointer in the lowcore (0xe00) that points to the reipl
information.  Currently, if that pointer is not zero, we copy the
reipl information.  If the pointer is not initialized and points
outside the accessible memory, it can happen that the memory copy
fails.  In that case we currently stop the initialization of zcore
which leads to a failing kernel dump.

The solution is to disable reipl after dump and continue with zcore
intialization.

Bugzilla
--------
BZ 587027
https://bugzilla.redhat.com/show_bug.cgi?id=587027

Upstream status of the patch
----------------------------
The patch is upstream as of kernel version 2.6.34
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=76ef964c78797f9baed7c2f9a58f696e86d8a048

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.


diff --git a/drivers/s390/char/zcore.c b/drivers/s390/char/zcore.c
index d68c831..ed8dd22 100644
--- a/drivers/s390/char/zcore.c
+++ b/drivers/s390/char/zcore.c
@@ -667,11 +667,7 @@ static int __init zcore_reipl_init(void)
 		rc = memcpy_hsa_kernel(ipl_block, ipib_info.ipib, PAGE_SIZE);
 	else
 		rc = memcpy_real(ipl_block, ipib_info.ipib, PAGE_SIZE);
-	if (rc) {
-		free_page((unsigned long) ipl_block);
-		return rc;
-	}
-	if (cksm(ipl_block, ipl_block->hdr.len) != ipib_info.checksum) {
+	if (rc || cksm(ipl_block, ipl_block->hdr.len) != ipib_info.checksum) {
 		TRACE("Checksum does not match\n");
 		free_page((unsigned long) ipl_block);
 		ipl_block = NULL;
