From: Mauro Carvalho Chehab <mchehab@redhat.com>
Date: Mon, 29 Nov 2010 20:42:27 -0500
Subject: [serial] serial_core: clean data before filling it
Message-id: <4CF41033.7040103@redhat.com>
Patchwork-id: 29669
O-Subject: [PATCH RHEL5.6] CVE-2010-4075 (BZ#648701): clean data before filling
	it
Bugzilla: 648701
CVE: CVE-2010-4075
RH-Acked-by: Jarod Wilson <jarod@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

Backport proposed patch for 2.6.35:

http://www.openwall.com/lists/oss-security/2010/10/06/6
http://lkml.indiana.edu/hypermail//linux/kernel/1009.1/03388.html

Upstream patch is more complex and breaks kABI.

>From the proposed patch, from Dan Rosenberg:

The TIOCGICOUNT device ioctl allows unprivileged users to read
uninitialized stack memory, because the "reserved" member of the
serial_icounter_struct struct declared on the stack is not altered or
zeroed before being copied back to the user. This patch takes care of
it.

Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
Signed-off-by: Jarod Wilson <jarod@redhat.com>

diff --git a/drivers/serial/serial_core.c b/drivers/serial/serial_core.c
index b80c760..69c6544 100644
--- a/drivers/serial/serial_core.c
+++ b/drivers/serial/serial_core.c
@@ -1046,6 +1046,7 @@ static int uart_get_count(struct uart_state *state,
 	struct uart_icount cnow;
 	struct uart_port *port = state->port;
 
+	memset(&icount, 0, sizeof(struct serial_icounter_struct));
 	spin_lock_irq(&port->lock);
 	memcpy(&cnow, &port->icount, sizeof(struct uart_icount));
 	spin_unlock_irq(&port->lock);
