From: Jonathan E Brassow <jbrassow@redhat.com>
Date: Tue, 20 Apr 2010 15:27:30 -0400
Subject: [md] dm-log: fix bad log status after failure
Message-id: <1271777250.18449.18.camel@hydrogen.msp.redhat.com>
Patchwork-id: 24261
O-Subject: [RHEL5.6 PATCH] BZ#570583: dm-log - bad log status after failure
Bugzilla: 570583
RH-Acked-by: Mikulas Patocka <mpatocka@redhat.com>

Taka noticed (and provided a patch for) a problem with how the in-kernel
device-mapper log.  The log was resetting a variable that was used to
report the status of the log device after the passing of a transient
failure.  Since there is now a daemon that is responsible for handling
DM mirror failures, it is no longer acceptable for the log to take this
action.  Further, the action conflicts with how the DM mirroring code
interacts with the logging code.  When a mirror gets a log failure, it
holds pending write I/O until the failure is dealt with.  The failure is
handled by the userspace daemon.  The daemon will not know that action
is needed if the log clears 'log_dev_failed' and doesn't report its
state as "failied".  Thus, everything would come to a halt.

This patch also brings the RHEL5 kernel inline with the upstream kernel,
which does not have a 'restore_log_device' function and does not try to
handle transient failures on its own.

Signed-off-by: Jonathan Brassow <jbrassow@redhat.com>

 brassow

Signed-off-by: Takahiro Yasui <tyasui@redhat.com>

diff --git a/drivers/md/dm-log.c b/drivers/md/dm-log.c
index e00e4c7..835fd92 100644
--- a/drivers/md/dm-log.c
+++ b/drivers/md/dm-log.c
@@ -611,11 +611,6 @@ static void fail_log_device(struct log_c *lc)
 		dm_table_event(lc->ti->table);
 }
 
-static void restore_log_device(struct log_c *lc)
-{
-	lc->log_dev_failed = 0;
-}
-
 static int disk_resume(struct dm_dirty_log *log)
 {
 	int r;
@@ -662,8 +657,7 @@ static int disk_resume(struct dm_dirty_log *log)
 		DMWARN("Failed to write header on dirty region log device, %s",
 		       lc->log_dev->name);
 		fail_log_device(lc);
-	} else
-		restore_log_device(lc);
+	}
 
 	return r;
 }
@@ -716,10 +710,9 @@ static int disk_flush(struct dm_dirty_log *log)
 	r = write_header(lc);
 	if (r)
 		fail_log_device(lc);
-        else {
+        else
 		lc->touched = 0;
-		restore_log_device(lc);
-	}
+
 	return r;
 }
 
