From: Mike Snitzer <snitzer@redhat.com>
Date: Tue, 8 Feb 2011 18:49:04 -0500
Subject: [md] dm-mpath: prevent io from work queue while suspended
Message-id: <1297190949-29149-5-git-send-email-snitzer@redhat.com>
Patchwork-id: 33170
O-Subject: [RHEL5.7 PATCH 3/8] dm mpath: prevent io from work queue while
	suspended
Bugzilla: 673058
RH-Acked-by: Alasdair G Kergon <agk@redhat.com>

BZ 673058

Upstream commit 67a46dad25ccc8910995d8671f7ec17a6bc823cb
Author: Mike Anderson <andmike@linux.vnet.ibm.com>
Date:   Thu Dec 10 23:52:21 2009 +0000

    dm mpath: prevent io from work queue while suspended

    Reject messages that can generate I/O while the device itself
    is suspended.

    Signed-off-by: Mike Anderson <andmike@linux.vnet.ibm.com>
    Acked-by: Kiyoshi Ueda <k-ueda@ct.jp.nec.com>
    Signed-off-by: Alasdair G Kergon <agk@redhat.com>

diff --git a/drivers/md/dm-mpath.c b/drivers/md/dm-mpath.c
index af6b6f1..3072c6d 100644
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@ -99,6 +99,8 @@ struct multipath {
 	mempool_t *mpio_pool;
 
 	struct mutex work_mutex;
+
+	unsigned suspended;	/* Don't create new I/O internally when set. */
 };
 
 /*
@@ -1362,6 +1364,7 @@ static void multipath_postsuspend(struct dm_target *ti)
 	struct multipath *m = ti->private;
 
 	mutex_lock(&m->work_mutex);
+	m->suspended = 1;
 	flush_multipath_work();
 	mutex_unlock(&m->work_mutex);
 }
@@ -1374,6 +1377,10 @@ static void multipath_resume(struct dm_target *ti)
 	struct multipath *m = (struct multipath *) ti->private;
 	unsigned long flags;
 
+	mutex_lock(&m->work_mutex);
+	m->suspended = 0;
+	mutex_unlock(&m->work_mutex);
+
 	spin_lock_irqsave(&m->lock, flags);
 	m->queue_if_no_path = m->saved_queue_if_no_path;
 	spin_unlock_irqrestore(&m->lock, flags);
@@ -1518,6 +1525,11 @@ static int multipath_message(struct dm_target *ti, unsigned argc, char **argv)
 
 	mutex_lock(&m->work_mutex);
 
+	if (m->suspended) {
+		r = -EBUSY;
+		goto out;
+	}
+
 	if (argc == 1) {
 		if (!strnicmp(argv[0], MESG_STR("queue_if_no_path"))) {
 			r = queue_if_no_path(m, 1, 0);
