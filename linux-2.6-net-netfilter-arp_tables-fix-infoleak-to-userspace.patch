From: Jiri Pirko <jpirko@redhat.com>
Date: Fri, 25 Mar 2011 15:28:49 -0400
Subject: [net] netfilter/arp_tables: fix infoleak to userspace
Message-id: <1301066932-21746-2-git-send-email-jpirko@redhat.com>
Patchwork-id: 35053
O-Subject: [patch rhel5 1/4] BZ689323 CVE-2011-1170 netfilter: arp_tables: fix
	infoleak to userspace
Bugzilla: 689323
CVE: CVE-2011-1170
RH-Acked-by: Thomas Graf <tgraf@redhat.com>

BZ689323 - CVE-2011-1170

upstream:
commit 42eab94fff18cb1091d3501cd284d6bd6cc9c143
Author: Vasiliy Kulikov <segoon@openwall.com>
Date:   Tue Mar 15 13:35:21 2011 +0100

    netfilter: arp_tables: fix infoleak to userspace

    Structures ipt_replace, compat_ipt_replace, and xt_get_revision are
    copied from userspace.  Fields of these structs that are
    zero-terminated strings are not checked.  When they are used as argument
    to a format string containing "%s" in request_module(), some sensitive
    information is leaked to userspace via argument of spawned modprobe
    process.

    The first bug was introduced before the git epoch;  the second is
    introduced by 6b7d31fc (v2.6.15-rc1);  the third is introduced by
    6b7d31fc (v2.6.15-rc1).  To trigger the bug one should have
    CAP_NET_ADMIN.

Signed-off-by: Jiri Pirko <jpirko@redhat.com>

diff --git a/net/ipv4/netfilter/arp_tables.c b/net/ipv4/netfilter/arp_tables.c
index c2bd5c2..7348a59 100644
--- a/net/ipv4/netfilter/arp_tables.c
+++ b/net/ipv4/netfilter/arp_tables.c
@@ -820,6 +820,7 @@ static int do_replace(void __user *user, unsigned int len)
 	/* overflow check */
 	if (tmp.num_counters >= INT_MAX / sizeof(struct xt_counters))
 		return -ENOMEM;
+	tmp.name[sizeof(tmp.name)-1] = 0;
 
 	newinfo = xt_alloc_table_info(tmp.size);
 	if (!newinfo)
@@ -1074,6 +1075,7 @@ static int do_arpt_get_ctl(struct sock *sk, int cmd, void __user *user, int *len
 			ret = -EFAULT;
 			break;
 		}
+		rev.name[sizeof(rev.name)-1] = 0;
 
 		try_then_request_module(xt_find_revision(NF_ARP, rev.name,
 							 rev.revision, 1, &ret),
