From: Chris Wright <chrisw@redhat.com>
Date: Wed, 1 Jul 2009 15:00:49 -0700
Subject: [pci] intel-iommu: fix iommu address space allocation
Message-id: 20090701220049.GF17071@x200.localdomain
O-Subject: [RHEL5.4 PATCH] intel-iommu: fix iommu address space allocation
Bugzilla: 509207
RH-Acked-by: Don Dutile <ddutile@redhat.com>
RH-Acked-by: Andy Gospodarek <gospo@redhat.com>
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=509207

This is a backport of the recent upstream fix:

http://git.kernel.org/linus/a15a519ed6e5e644f5a33c213c00b0c1d3cfe683

Tested successfully by me, can now actually send traffic through ixgbe
w/out killing the box.  And all other devices protected by IOMMU continued
to work just fine.

    From: David Woodhouse <dwmw2@infradead.org>
    Date: Wed, 1 Jul 2009 18:49:06 +0100
    Subject: [PATCH] Fix iommu address space allocation

    This fixes kernel.org bug #13584. The IOVA code attempted to optimise
    the insertion of new ranges into the rbtree, with the unfortunate result
    that some ranges just didn't get inserted into the tree at all. Then
    those ranges would be handed out more than once, and things kind of go
    downhill from there.

    Introduced after 2.6.25 by ddf02886cbe665d67ca750750196ea5bf524b10b
    ("PCI: iova RB tree setup tweak").

    Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
    Cc: mark gross <mgross@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Signed-off-by: Chris Wright <chrisw@redhat.com>

diff --git a/drivers/pci/iova.c b/drivers/pci/iova.c
index 2287116..9c11867 100644
--- a/drivers/pci/iova.c
+++ b/drivers/pci/iova.c
@@ -1,9 +1,19 @@
 /*
- * Copyright (c) 2006, Intel Corporation.
+ * Copyright © 2006-2009, Intel Corporation.
  *
- * This file is released under the GPLv2.
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along with
+ * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
+ * Place - Suite 330, Boston, MA 02111-1307 USA.
  *
- * Copyright (C) 2006-2008 Intel Corporation
  * Author: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>
  */
 
@@ -123,7 +133,15 @@ move_left:
 	/* Insert the new_iova into domain rbtree by holding writer lock */
 	/* Add new node and rebalance tree. */
 	{
-		struct rb_node **entry = &((prev)), *parent = NULL;
+		struct rb_node **entry, *parent = NULL;
+
+		/* If we have 'prev', it's a valid place to start the
+		   insertion. Otherwise, start from the root. */
+		if (prev)
+			entry = &prev;
+		else
+			entry = &iovad->rbroot.rb_node;
+
 		/* Figure out where to put new node */
 		while (*entry) {
 			struct iova *this = container_of(*entry,
