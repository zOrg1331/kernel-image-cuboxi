Date: Thu, 02 Nov 2006 15:26:02 +0000
From: Patrick Caulfield <patrick@tykepenguin.com>
Subject: [RHEL5] dlm: fix oops in kref_put when removing a lockspace

This patch fixes the recounting on the lockspace kobject. Previously the lockspace was freed while userspace could have had a
reference to one of its sysfs files, causing an occasional oops in kref_put.

Now the lockspace kfree is moved into the kobject release() function
-- 

patrick

Signed-Off-By: Patrick Caulfield <pcaulfie@redhat.com>


diff --git a/fs/dlm/lockspace.c b/fs/dlm/lockspace.c
index 109333c..499ee11 100644
--- a/fs/dlm/lockspace.c
+++ b/fs/dlm/lockspace.c
@@ -143,6 +143,12 @@ static ssize_t dlm_attr_store(struct kob
 	return a->store ? a->store(ls, buf, len) : len;
 }

+static void lockspace_kobj_release(struct kobject *k)
+{
+	struct dlm_ls *ls  = container_of(k, struct dlm_ls, ls_kobj);
+	kfree(ls);
+}
+
 static struct sysfs_ops dlm_attr_ops = {
 	.show  = dlm_attr_show,
 	.store = dlm_attr_store,
@@ -151,6 +157,7 @@ static struct sysfs_ops dlm_attr_ops = {
 static struct kobj_type dlm_ktype = {
 	.default_attrs = dlm_attrs,
 	.sysfs_ops     = &dlm_attr_ops,
+	.release       = lockspace_kobj_release,
 };

 static struct kset dlm_kset = {
@@ -678,7 +685,7 @@ static int release_lockspace(struct dlm_
 	dlm_clear_members_gone(ls);
 	kfree(ls->ls_node_array);
 	kobject_unregister(&ls->ls_kobj);
-	kfree(ls);
+        /* The ls structure will be freed when the kobject is done with */

 	mutex_lock(&ls_lock);
 	ls_count--;

