From: David Teigland <teigland@redhat.com>
Date: Thu, 29 Nov 2007 10:25:32 -0600
Subject: [dlm] fix memory leak in dlm_add_member
Message-id: 20071129162532.GC8513@redhat.com
O-Subject: [RHEL5.2 PATCH] dlm: fix memory leak in dlm_add_member
Bugzilla: 358791

bz 358791

There's a memory leak in fs/dlm/member.c::dlm_add_member().
If "dlm_node_weight(ls->ls_name, nodeid)" returns < 0, then
we'll return without freeing the memory allocated to the (at
that point yet unused) 'memb'.
This patch frees the allocated memory in that case and thus
avoids the leak.

Signed-off-by: Jesper Juhl <jesper.juhl@gmail.com>

Upstream commit
http://git.kernel.org/gitweb.cgi?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=1a2bf2eefb63a267aea7f3f80d6ac59160e20810

Acked-by: Bob Peterson <rpeterso@redhat.com>

diff --git a/fs/dlm/member.c b/fs/dlm/member.c
index 073599d..d099775 100644
--- a/fs/dlm/member.c
+++ b/fs/dlm/member.c
@@ -56,8 +56,10 @@ static int dlm_add_member(struct dlm_ls *ls, int nodeid)
 		return -ENOMEM;
 
 	w = dlm_node_weight(ls->ls_name, nodeid);
-	if (w < 0)
+	if (w < 0) {
+		kfree(memb);
 		return w;
+	}
 
 	memb->nodeid = nodeid;
 	memb->weight = w;
