From: Jonathan Brassow <jbrassow@redhat.com>
Date: Tue, 12 Aug 2008 13:45:54 -0500
Subject: [md] device-mapper interface exposure
Message-id: 1218566754.22247.25.camel@hydrogen
O-Subject: [RHEL 5.3 Patch 1 of 8]: device-mapper interface exposure (bz 429337)
Bugzilla: 429337
RH-Acked-by: Alasdair G Kergon <agk@redhat.com>

Patch: dm-log-generalise-name-in-messages.patch

 brassow

Change dm-log.c messages from "mirror log" to "dirty region log" as
a new target wants to share this code.

Originator: Heinz Mauelshagen <hjm@redhat.com>
Signed-off-by: Jonathan Brassow <jbrassow@redhat.com>

diff --git a/drivers/md/dm-log.c b/drivers/md/dm-log.c
index 148e11c..6b2470f 100644
--- a/drivers/md/dm-log.c
+++ b/drivers/md/dm-log.c
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2003 Sistina Software
+ * Copyright (C) 2004-2008 Red Hat, Inc. All rights reserved.
  *
  * This file is released under the LGPL.
  */
@@ -12,7 +13,7 @@
 #include "dm-log.h"
 #include "dm-io.h"
 
-#define DM_MSG_PREFIX "mirror log"
+#define DM_MSG_PREFIX "dirty region log"
 
 static LIST_HEAD(_log_types);
 static DEFINE_SPINLOCK(_lock);
@@ -327,7 +328,7 @@ static int create_log_context(struct dirty_log *log, struct dm_target *ti,
 	int r;
 
 	if (argc < 1 || argc > 3) {
-		DMWARN("wrong number of arguments to mirror log");
+		DMWARN("wrong number of arguments to dirty region log");
 		return -EINVAL;
 	}
 
@@ -339,8 +340,8 @@ static int create_log_context(struct dirty_log *log, struct dm_target *ti,
 		else if (!strcmp(argv[i], "block_on_error"))
 			failure_response = DMLOG_IOERR_BLOCK;
 		else {
-			DMWARN("unrecognised sync argument to mirror log: %s",
-			       argv[i]);
+			DMWARN("unrecognised sync argument to "
+			       "dirty region log: %s", argv[i]);
 			return -EINVAL;
 		}
 	}
@@ -483,7 +484,7 @@ static int disk_ctr(struct dirty_log *log, struct dm_target *ti,
 	struct dm_dev *dev;
 
 	if (argc < 2 || argc > 4) {
-		DMWARN("wrong number of arguments to disk mirror log");
+		DMWARN("wrong number of arguments to disk dirty region log");
 		return -EINVAL;
 	}
 
@@ -548,7 +549,7 @@ static int disk_resume(struct dirty_log *log)
 	 * Assume the worst in the event of failure.
 	 */
 	if (!lc->log_dev_failed && read_header(lc)) {
-		DMWARN("Failed to read header on mirror log device, %s",
+		DMWARN("Failed to read header on dirty region log device, %s",
 		       lc->log_dev->name);
 		fail_log_device(lc);
 		lc->header.nr_regions = 0;
@@ -579,7 +580,7 @@ static int disk_resume(struct dirty_log *log)
 	/* write the new header */
 	r = write_header(lc);
 	if (r) {
-		DMWARN("Failed to write header on mirror log device, %s",
+		DMWARN("Failed to write header on dirty region log device, %s",
 		       lc->log_dev->name);
 		fail_log_device(lc);
 	} else
