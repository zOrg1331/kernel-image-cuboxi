From: Andrew Jones <drjones@redhat.com>
Date: Thu, 17 Dec 2009 08:37:42 +0100
Subject: [x86] sanity check for AMD northbridges
Message-id: 3536e23f46c0a532345b1d1cc9763546848d1002.1261035091.git.drjones@redhat.com
O-Subject: [RHEL5.4z PATCH] [amd] sanity check for northbridges
Bugzilla: 549905
RH-Acked-by: Miroslav Rezanina <mrezanin@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Don Dutile <ddutile@redhat.com>

Resolves BZ 547518, HVM guest crash on boot in identify_cpu. Before
applying the topology information for multi-node processors (if M-C
is detected) ensure that we have a northbridge. This would normally
always be the case, but it's not in the case with virtualization. The
check is done by comparing the vendor and device IDs of the expected
NB (device 24) against the valid AMD northbridges' whitelist.

Thanks to Andre Przywara from AMD for his quick development of this
patch.

This isn't upstream as there is a better patch using NodeIDMSR there.
RHEL 5.5 will also use a different method, since it is already patched
with NodeIDMSR as of -181. This is a 5.4-z only patch.

Brew build: https://brewweb.devel.redhat.com/taskinfo?taskID=2156199

Boot tested on amd-dinar-03.lab.bos.redhat.com with both 32b and 64b
HVM guests.
---
 arch/i386/kernel/cpu/amd.c |    7 +++++++
 arch/x86_64/kernel/setup.c |    7 +++++++
 2 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/arch/i386/kernel/cpu/amd.c b/arch/i386/kernel/cpu/amd.c
index 522c1a0..d56e2cc 100644
--- a/arch/i386/kernel/cpu/amd.c
+++ b/arch/i386/kernel/cpu/amd.c
@@ -4,6 +4,7 @@
 #include <asm/io.h>
 #include <asm/processor.h>
 #include <asm/pci-direct.h>
+#include <asm/k8.h>
 
 #include "cpu.h"
 
@@ -43,6 +44,12 @@ static void __cpuinit amd_fixup_dcm(struct cpuinfo_x86 *c)
 	if (cpu_has(c, X86_FEATURE_AMD_DCM))
 		return;
 
+	/* proceed only is there is a valid AMD northbridge
+	 * (not in virtualized environments!)
+	 */
+	if (!early_is_k8_nb(read_pci_config(0, 24, 3, 0x00)))
+		return;
+
 	/* check for multi-node processor on boot cpu */
 	t = read_pci_config(0, 24, 3, 0xe8);
 	if (!(t & (1 << 29)))
diff --git a/arch/x86_64/kernel/setup.c b/arch/x86_64/kernel/setup.c
index 123735c..791c1f8 100644
--- a/arch/x86_64/kernel/setup.c
+++ b/arch/x86_64/kernel/setup.c
@@ -68,6 +68,7 @@
 #include <asm/dmi.h>
 #include <asm/generic-hypervisor.h>
 #include <asm/pci-direct.h>
+#include <asm/k8.h>
 
 /*
  * Machine setup..
@@ -808,6 +809,12 @@ static void __cpuinit amd_fixup_dcm(struct cpuinfo_x86 *c)
 	if (cpu_has(c, X86_FEATURE_AMD_DCM))
 		return;
 
+	/* proceed only is there is a valid AMD northbridge
+	 * (not in virtualized environments!)
+	 */
+	if (!early_is_k8_nb(read_pci_config(0, 24, 3, 0x00)))
+		return;
+
 	/* check for multi-node processor on boot cpu */
 	t = read_pci_config(0, 24, 3, 0xe8);
 	if (!(t & (1 << 29)))
-- 
1.6.5.2

