From: Oleg Nesterov <oleg@redhat.com>
Date: Thu, 1 Jul 2010 16:03:34 -0400
Subject: [security] selinux: fix race with re-parenting
Message-id: <20100701160334.GA15404@redhat.com>
Patchwork-id: 26659
O-Subject: [RHEL5 PATCH] bz#556675: selinux_bprm_post_apply_creds: fix the
	race with re-parenting
Bugzilla: 556675
RH-Acked-by: Roland McGrath <roland@redhat.com>
RH-Acked-by: Eric Paris <eparis@redhat.com>

https://bugzilla.redhat.com/show_bug.cgi?id=556675

selinux_bprm_post_apply_creds() accesses current->parent lockless
and thus can race with the exiting parent and hit ->signal == NULL.
Take tasklist_lock around __wake_up_parent().

Signed-off-by: Oleg Nesterov <oleg@redhat.com>

diff --git a/security/selinux/hooks.c b/security/selinux/hooks.c
index 4719175..2e261d9 100644
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@ -2045,7 +2045,9 @@ static void selinux_bprm_post_apply_creds(struct linux_binprm *bprm)
 
 	/* Wake up the parent if it is waiting so that it can
 	   recheck wait permission to the new task SID. */
+	read_lock(&tasklist_lock);
 	wake_up_interruptible(&current->parent->signal->wait_chldexit);
+	read_unlock(&tasklist_lock);
 }
 
 /* superblock security operations */
