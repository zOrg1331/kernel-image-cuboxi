From: John Villalovos <jvillalo@redhat.com>
Date: Fri, 9 Oct 2009 11:24:27 -0400
Subject: [x86] support always running Local APIC
Message-id: 20091009152427.GA12981@linuxjohn.usersys.redhat.com
O-Subject: [RHEL 5.5 BZ496306 v2] Support Always running Local APIC
Bugzilla: 496306
RH-Nacked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>
RH-Acked-by: Chris Lalancette <clalance@redhat.com>

On Thu, Oct 08, 2009 at 11:12:53AM -0400, Prarit Bhargava wrote:
> John, can you update the *-xen.c files and make sure that xen compiles?

Support Always Running local APIC Timer (ARAT)
https://bugzilla.redhat.com/show_bug.cgi?id=496306

Second version.  Per Prarit's request I am adding the "arat" flag to
arch/x86_64/kernel/setup-xen.c.  This is the only difference between the first
posting.

Backport of:
    Upstream commit db954b5898dd3ef3ef93f4144158ea8f97deb058
    Upstream Author: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
    Upstream Date:   Mon Apr 6 18:51:29 2009 -0700

    Add support for Always Running APIC timer, CPUID_0x6_EAX_Bit2.
    This bit means the APIC timer continues to run even when CPU is
    in deep C-states.

    The advantage is that we can use LAPIC timer on these CPUs
    always, and there is no need for "slow to read and program"
    external timers (HPET/PIT) and the timer broadcast logic
    and related code in C-state entry and exit.

Brew build:
https://brewweb.devel.redhat.com/taskinfo?taskID=2021575

RHTS test pass:
https://rhts.redhat.com/cgi-bin/rhts/jobs.cgi?id=92645

diff --git a/arch/i386/kernel/cpu/addon_cpuid_features.c b/arch/i386/kernel/cpu/addon_cpuid_features.c
index 39c41cc..ea9d23d 100644
--- a/arch/i386/kernel/cpu/addon_cpuid_features.c
+++ b/arch/i386/kernel/cpu/addon_cpuid_features.c
@@ -31,6 +31,7 @@ void __cpuinit init_scattered_cpuid_features(struct cpuinfo_x86 *c)
 
 	static const struct cpuid_bit cpuid_bits[] = {
 		{ X86_FEATURE_IDA, CR_EAX, 1, 0x00000006 },
+		{ X86_FEATURE_ARAT, CR_EAX, 2, 0x00000006 },
 		{ 0, 0, 0, 0 }
 	};
 
diff --git a/arch/i386/kernel/cpu/proc.c b/arch/i386/kernel/cpu/proc.c
index 154190b..ad91b3f 100644
--- a/arch/i386/kernel/cpu/proc.c
+++ b/arch/i386/kernel/cpu/proc.c
@@ -42,7 +42,7 @@ static int show_cpuinfo(struct seq_file *m, void *v)
 		NULL, NULL, NULL, NULL,
 		"constant_tsc", "up", NULL, NULL, NULL, NULL, NULL, NULL,
 		"ida", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-		"nonstop_tsc", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+		"nonstop_tsc", "arat", NULL, NULL, NULL, NULL, NULL, NULL,
 
 		/* Intel-defined (#2) */
 		"pni", NULL, NULL, "monitor", "ds_cpl", "vmx", "smx", "est",
diff --git a/arch/x86_64/kernel/setup-xen.c b/arch/x86_64/kernel/setup-xen.c
index 83d8992..25c0dad 100644
--- a/arch/x86_64/kernel/setup-xen.c
+++ b/arch/x86_64/kernel/setup-xen.c
@@ -1524,7 +1524,7 @@ static int show_cpuinfo(struct seq_file *m, void *v)
 		"constant_tsc", NULL, NULL,
 		"up", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
 		"ida", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-		NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+		NULL, "arat", NULL, NULL, NULL, NULL, NULL, NULL,
 
 		/* Intel-defined (#2) */
 		"pni", NULL, NULL, "monitor", "ds_cpl", "vmx", "smx", "est",
diff --git a/arch/x86_64/kernel/setup.c b/arch/x86_64/kernel/setup.c
index 8a35974..8624d95 100644
--- a/arch/x86_64/kernel/setup.c
+++ b/arch/x86_64/kernel/setup.c
@@ -1267,7 +1267,7 @@ static int show_cpuinfo(struct seq_file *m, void *v)
 		"constant_tsc", NULL, NULL,
 		"up", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
 		"ida", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
-		"nonstop_tsc", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+		"nonstop_tsc", "arat", NULL, NULL, NULL, NULL, NULL, NULL,
 
 		/* Intel-defined (#2) */
 		"pni", NULL, NULL, "monitor", "ds_cpl", "vmx", "smx", "est",
diff --git a/drivers/acpi/processor_idle.c b/drivers/acpi/processor_idle.c
index afe6d2b..e4a7976 100644
--- a/drivers/acpi/processor_idle.c
+++ b/drivers/acpi/processor_idle.c
@@ -934,7 +934,7 @@ static int acpi_processor_power_verify(struct acpi_processor *pr)
 	}
 
 #ifdef ARCH_APICTIMER_STOPS_ON_C3
-	if (timer_broadcast)
+	if (timer_broadcast && !boot_cpu_has(X86_FEATURE_ARAT))
 		on_each_cpu(switch_APIC_timer_to_ipi, &mask, 1, 1);
 #endif
 
diff --git a/include/asm-i386/cpufeature.h b/include/asm-i386/cpufeature.h
index 4a20215..ea5b3fc 100644
--- a/include/asm-i386/cpufeature.h
+++ b/include/asm-i386/cpufeature.h
@@ -78,6 +78,7 @@
 #define X86_FEATURE_LFENCE_RDTSC (3*32+18) /* Lfence synchronizes RDTSC */
 #define X86_FEATURE_TSC_RELIABLE (3*32+23) /* TSC is known to be reliable */
 #define X86_FEATURE_NONSTOP_TSC (3*32+24) /* TSC does not stop in C states */
+#define X86_FEATURE_ARAT	(3*32+25) /* Always Running APIC Timer */
 
 /* Intel-defined CPU features, CPUID level 0x00000001 (ecx), word 4 */
 #define X86_FEATURE_XMM3	(4*32+ 0) /* Streaming SIMD Extensions-3 */
diff --git a/include/asm-x86_64/cpufeature.h b/include/asm-x86_64/cpufeature.h
index a998857..e75d39d 100644
--- a/include/asm-x86_64/cpufeature.h
+++ b/include/asm-x86_64/cpufeature.h
@@ -73,6 +73,7 @@
 #define X86_FEATURE_LFENCE_RDTSC (3*32+18) /* Lfence synchronizes RDTSC */
 #define X86_FEATURE_TSC_RELIABLE (3*32+23) /* TSC is known to be reliable */
 #define X86_FEATURE_NONSTOP_TSC (3*32+24) /* TSC does not stop in C states */
+#define X86_FEATURE_ARAT	(3*32+25) /* Always Running APIC Timer */
 
 /* Intel-defined CPU features, CPUID level 0x00000001 (ecx), word 4 */
 #define X86_FEATURE_XMM3	(4*32+ 0) /* Streaming SIMD Extensions-3 */
